{
  "contractName": "CompanyFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_COMPANY_TOKENS",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x38abeb43"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_OWNER_COMPANIES",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4642e0ba"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "EMPTY_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xeb39c3af"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "self",
          "type": "CompanyFactory.Data storage"
        },
        {
          "name": "aCompanyName",
          "type": "string"
        },
        {
          "name": "aPhone",
          "type": "string"
        },
        {
          "name": "aUrl",
          "type": "string"
        },
        {
          "name": "aDid",
          "type": "string"
        },
        {
          "name": "uPortAdd",
          "type": "address"
        }
      ],
      "name": "createCompany",
      "outputs": [
        {
          "name": "",
          "type": "Company"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x446b3243"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "self",
          "type": "CompanyFactory.Data storage"
        }
      ],
      "name": "nextCompanyAvailablePositionUtil",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xebbe09fd"
    }
  ],
  "bytecode": "0x610f3c610030600b82828239805160001a6073146000811461002057610022565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100835763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166338abeb438114610088578063446b3243146100a65780634642e0ba1461025f578063eb39c3af14610267578063ebbe09fd1461026f575b600080fd5b61009061028c565b6040805160ff9092168252519081900360200190f35b8180156100b257600080fd5b50610236600480360360c08110156100c957600080fd5b813591908101906040810160208201356401000000008111156100eb57600080fd5b8201836020820111156100fd57600080fd5b8035906020019184600183028401116401000000008311171561011f57600080fd5b91939092909160208101903564010000000081111561013d57600080fd5b82018360208201111561014f57600080fd5b8035906020019184600183028401116401000000008311171561017157600080fd5b91939092909160208101903564010000000081111561018f57600080fd5b8201836020820111156101a157600080fd5b803590602001918460018302840111640100000000831117156101c357600080fd5b9193909290916020810190356401000000008111156101e157600080fd5b8201836020820111156101f357600080fd5b8035906020019184600183028401116401000000008311171561021557600080fd5b91935091503573ffffffffffffffffffffffffffffffffffffffff16610291565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100906104a9565b6102366104ae565b6100906004803603602081101561028557600080fd5b50356104b3565b600581565b60008061029d8c6104c6565b905060ff811660031161033757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f596f752063616e2774206372656174652061206e657720636f6d70616e792e2060448201527f4d6178206c696d6974207265616368656420283320636f6d70616e6965732900606482015290519081900360840190fd5b6000338c8c8c8c8c8c8c8c8c61034b610581565b73ffffffffffffffffffffffffffffffffffffffff808c168252821660a082015260c0602082018181529082018a905260408201606083016080840160e085018e8e80828437600083820152601f01601f191690910186810385528c815260200190508c8c80828437600083820152601f01601f191690910186810384528a815260200190508a8a80828437600083820152601f01601f191690910186810383528881526020019050888880828437600081840152601f19601f8201169050808301925050509e505050505050505050505050505050604051809103906000f08015801561043d573d6000803e3d6000fd5b5033600090815260208f905260409020909150819060ff84166003811061046057fe5b01805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff929092169190911790559c9b505050505050505050505050565b600381565b600081565b60006104be826104c6565b90505b919050565b60006104d0610591565b3360009081526020849052604090819020815160608101928390529160039082845b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116104f25750939450600093505050505b600360ff821610156105775760008260ff83166003811061054557fe5b602002015173ffffffffffffffffffffffffffffffffffffffff16141561056f5791506104c19050565b600101610528565b5060039392505050565b604051610960806105b183390190565b606060405190810160405280600390602082028038833950919291505056fe608060405234801561001057600080fd5b50604051610960380380610960833981018060405260c081101561003357600080fd5b81516020830180519193928301929164010000000081111561005457600080fd5b8201602081018481111561006757600080fd5b815164010000000081118282018710171561008157600080fd5b5050929190602001805164010000000081111561009d57600080fd5b820160208101848111156100b057600080fd5b81516401000000008111828201871017156100ca57600080fd5b505092919060200180516401000000008111156100e657600080fd5b820160208101848111156100f957600080fd5b815164010000000081118282018710171561011357600080fd5b5050929190602001805164010000000081111561012f57600080fd5b8201602081018481111561014257600080fd5b815164010000000081118282018710171561015c57600080fd5b50506020918201516000805433600160a060020a03199182161716600160a060020a038b161790558751919450925061019b916002919088019061021f565b5083516101af90600390602087019061021f565b5082516101c390600490602086019061021f565b5081516101d790600590602085019061021f565b5060068054600160a060020a031916600160a060020a03928316179055600080549091168152600160208190526040909120805460ff19169091179055506102ba9350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061026057805160ff191683800117855561028d565b8280016001018555821561028d579182015b8281111561028d578251825591602001919060010190610272565b5061029992915061029d565b5090565b6102b791905b8082111561029957600081556001016102a3565b90565b610697806102c96000396000f3fe60806040526004361061008d5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610092578063286805081461011c57806340cb346214610133578063429b62e5146101665780634abf825d146101ad5780635600f04f146102025780638da5cb5b146102175780639284f4971461022c575b600080fd5b34801561009e57600080fd5b506100a7610241565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e15781810151838201526020016100c9565b50505050905090810190601f16801561010e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012857600080fd5b506101316102cc565b005b34801561013f57600080fd5b506101316004803603602081101561015657600080fd5b5035600160a060020a0316610489565b34801561017257600080fd5b506101996004803603602081101561018957600080fd5b5035600160a060020a031661055a565b604080519115158252519081900360200190f35b3480156101b957600080fd5b506101e6600480360360408110156101d057600080fd5b50600160a060020a03813516906020013561056f565b60408051600160a060020a039092168252519081900360200190f35b34801561020e57600080fd5b506100a76105a6565b34801561022357600080fd5b506101e6610601565b34801561023857600080fd5b506100a7610610565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156102c45780601f10610299576101008083540402835291602001916102c4565b820191906000526020600020905b8154815290600101906020018083116102a757829003601f168201915b505050505081565b6000543390600160a060020a0316811461036d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4163636573732064656e6965642e20436f6d70616e79206f776e6572206f6e6c60448201527f792e000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b33ff5b81548152906001019060200180831161037057829003601f1682019150508481038352865460026000196101006001841615020190911604808252602090910190879080156104005780601f106103d557610100808354040283529160200191610400565b820191906000526020600020905b8154815290600101906020018083116103e357829003601f168201915b50508481038252855460026000196101006001841615020190911604808252602090910190869080156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050965050505050505060405180910390a250565b6000543390600160a060020a0316811461052a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4163636573732064656e6965642e20436f6d70616e79206f776e6572206f6e6c60448201527f792e000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b506000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60016020526000908152604090205460ff1681565b60076020528160005260406000208181548110151561058a57fe5b600091825260209091200154600160a060020a03169150829050565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102c45780601f10610299576101008083540402835291602001916102c4565b600054600160a060020a031681565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102c45780601f10610299576101008083540402835291602001916102c456fea165627a7a723058201b643141d640ef6b69f1ed30f7003c92372a29a87b4611d0ebbf90ea18d73b860029a165627a7a723058204bc5f77162d7bb991a6874dfcd829d757bf0457a3905209edd1b6fa88fc40a250029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100835763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166338abeb438114610088578063446b3243146100a65780634642e0ba1461025f578063eb39c3af14610267578063ebbe09fd1461026f575b600080fd5b61009061028c565b6040805160ff9092168252519081900360200190f35b8180156100b257600080fd5b50610236600480360360c08110156100c957600080fd5b813591908101906040810160208201356401000000008111156100eb57600080fd5b8201836020820111156100fd57600080fd5b8035906020019184600183028401116401000000008311171561011f57600080fd5b91939092909160208101903564010000000081111561013d57600080fd5b82018360208201111561014f57600080fd5b8035906020019184600183028401116401000000008311171561017157600080fd5b91939092909160208101903564010000000081111561018f57600080fd5b8201836020820111156101a157600080fd5b803590602001918460018302840111640100000000831117156101c357600080fd5b9193909290916020810190356401000000008111156101e157600080fd5b8201836020820111156101f357600080fd5b8035906020019184600183028401116401000000008311171561021557600080fd5b91935091503573ffffffffffffffffffffffffffffffffffffffff16610291565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100906104a9565b6102366104ae565b6100906004803603602081101561028557600080fd5b50356104b3565b600581565b60008061029d8c6104c6565b905060ff811660031161033757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f596f752063616e2774206372656174652061206e657720636f6d70616e792e2060448201527f4d6178206c696d6974207265616368656420283320636f6d70616e6965732900606482015290519081900360840190fd5b6000338c8c8c8c8c8c8c8c8c61034b610581565b73ffffffffffffffffffffffffffffffffffffffff808c168252821660a082015260c0602082018181529082018a905260408201606083016080840160e085018e8e80828437600083820152601f01601f191690910186810385528c815260200190508c8c80828437600083820152601f01601f191690910186810384528a815260200190508a8a80828437600083820152601f01601f191690910186810383528881526020019050888880828437600081840152601f19601f8201169050808301925050509e505050505050505050505050505050604051809103906000f08015801561043d573d6000803e3d6000fd5b5033600090815260208f905260409020909150819060ff84166003811061046057fe5b01805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff929092169190911790559c9b505050505050505050505050565b600381565b600081565b60006104be826104c6565b90505b919050565b60006104d0610591565b3360009081526020849052604090819020815160608101928390529160039082845b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116104f25750939450600093505050505b600360ff821610156105775760008260ff83166003811061054557fe5b602002015173ffffffffffffffffffffffffffffffffffffffff16141561056f5791506104c19050565b600101610528565b5060039392505050565b604051610960806105b183390190565b606060405190810160405280600390602082028038833950919291505056fe608060405234801561001057600080fd5b50604051610960380380610960833981018060405260c081101561003357600080fd5b81516020830180519193928301929164010000000081111561005457600080fd5b8201602081018481111561006757600080fd5b815164010000000081118282018710171561008157600080fd5b5050929190602001805164010000000081111561009d57600080fd5b820160208101848111156100b057600080fd5b81516401000000008111828201871017156100ca57600080fd5b505092919060200180516401000000008111156100e657600080fd5b820160208101848111156100f957600080fd5b815164010000000081118282018710171561011357600080fd5b5050929190602001805164010000000081111561012f57600080fd5b8201602081018481111561014257600080fd5b815164010000000081118282018710171561015c57600080fd5b50506020918201516000805433600160a060020a03199182161716600160a060020a038b161790558751919450925061019b916002919088019061021f565b5083516101af90600390602087019061021f565b5082516101c390600490602086019061021f565b5081516101d790600590602085019061021f565b5060068054600160a060020a031916600160a060020a03928316179055600080549091168152600160208190526040909120805460ff19169091179055506102ba9350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061026057805160ff191683800117855561028d565b8280016001018555821561028d579182015b8281111561028d578251825591602001919060010190610272565b5061029992915061029d565b5090565b6102b791905b8082111561029957600081556001016102a3565b90565b610697806102c96000396000f3fe60806040526004361061008d5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610092578063286805081461011c57806340cb346214610133578063429b62e5146101665780634abf825d146101ad5780635600f04f146102025780638da5cb5b146102175780639284f4971461022c575b600080fd5b34801561009e57600080fd5b506100a7610241565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e15781810151838201526020016100c9565b50505050905090810190601f16801561010e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012857600080fd5b506101316102cc565b005b34801561013f57600080fd5b506101316004803603602081101561015657600080fd5b5035600160a060020a0316610489565b34801561017257600080fd5b506101996004803603602081101561018957600080fd5b5035600160a060020a031661055a565b604080519115158252519081900360200190f35b3480156101b957600080fd5b506101e6600480360360408110156101d057600080fd5b50600160a060020a03813516906020013561056f565b60408051600160a060020a039092168252519081900360200190f35b34801561020e57600080fd5b506100a76105a6565b34801561022357600080fd5b506101e6610601565b34801561023857600080fd5b506100a7610610565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156102c45780601f10610299576101008083540402835291602001916102c4565b820191906000526020600020905b8154815290600101906020018083116102a757829003601f168201915b505050505081565b6000543390600160a060020a0316811461036d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4163636573732064656e6965642e20436f6d70616e79206f776e6572206f6e6c60448201527f792e000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b33ff5b81548152906001019060200180831161037057829003601f1682019150508481038352865460026000196101006001841615020190911604808252602090910190879080156104005780601f106103d557610100808354040283529160200191610400565b820191906000526020600020905b8154815290600101906020018083116103e357829003601f168201915b50508481038252855460026000196101006001841615020190911604808252602090910190869080156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050965050505050505060405180910390a250565b6000543390600160a060020a0316811461052a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4163636573732064656e6965642e20436f6d70616e79206f776e6572206f6e6c60448201527f792e000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b506000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60016020526000908152604090205460ff1681565b60076020528160005260406000208181548110151561058a57fe5b600091825260209091200154600160a060020a03169150829050565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102c45780601f10610299576101008083540402835291602001916102c4565b600054600160a060020a031681565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102c45780601f10610299576101008083540402835291602001916102c456fea165627a7a723058201b643141d640ef6b69f1ed30f7003c92372a29a87b4611d0ebbf90ea18d73b860029a165627a7a723058204bc5f77162d7bb991a6874dfcd829d757bf0457a3905209edd1b6fa88fc40a250029",
  "sourceMap": "538:3967:5:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "538:3967:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;684:44;;;;;;;;;;;;;;;;;;;;;;;2349:755;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2349:755:5;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2349:755:5;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2349:755:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2349:755:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2349:755:5;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2349:755:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2349:755:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2349:755:5;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2349:755:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2349:755:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2349:755:5;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2349:755:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2349:755:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2349:755:5;;-1:-1:-1;2349:755:5;-1:-1:-1;2349:755:5;;;;;;;;;;;;;;;;;;;;;;;;588:45;;;;778:50;;;;3456:177;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3456:177:5;;;684:44;727:1;684:44;:::o;2349:755::-;2597:7;2621:14;2638:34;2667:4;2638:28;:34::i;:::-;2621:51;-1:-1:-1;2703:30:5;;;632:1;2703:30;2682:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2832:18;2878:10;2902:12;;2928:6;;2948:4;;2966;;2984:8;2853:149;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1:33:-1;99:1;81:16;;;74:27;137:4;117:14;-1:-1;;113:30;157:16;;;2853:149:5;;;;;;;;;;;-1:-1:-1;2853:149:5;;;;;1:33:-1;99:1;81:16;;;74:27;137:4;117:14;-1:-1;;113:30;157:16;;;2853:149:5;;;;;;;;;;;-1:-1:-1;2853:149:5;;;;;1:33:-1;99:1;81:16;;;74:27;137:4;117:14;-1:-1;;113:30;157:16;;;2853:149:5;;;;;;;;;;;-1:-1:-1;2853:149:5;;;;;1:33:-1;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2853:149:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;3027:10:5;3012:14;:26;;;;;;;;;;2832:170;;-1:-1:-1;2832:170:5;;3012:36;;;;;;;;;;;:58;;-1:-1:-1;;3012:58:5;;;;;;;;;;;;3087:10;2349:755;-1:-1:-1;;;;;;;;;;;;2349:755:5:o;588:45::-;632:1;588:45;:::o;778:50::-;826:1;778:50;:::o;3456:177::-;3564:5;3592:34;3621:4;3592:28;:34::i;:::-;3585:41;;3456:177;;;;:::o;4036:466::-;4140:5;4161:50;;:::i;:::-;4229:10;4214:14;:26;;;;;;;;;;;;4161:79;;;;;;;;;;;;4214:26;4161:79;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4161:79:5;;-1:-1:-1;4255:7:5;;-1:-1:-1;;;;4250:182:5;632:1;4268:23;;;;4250:182;;;826:1;4316:14;:17;;;;;;;;;;;;;;:34;;;4312:110;;;4377:1;-1:-1:-1;4370:8:5;;-1:-1:-1;4370:8:5;4312:110;4293:3;;4250:182;;;-1:-1:-1;632:1:5;;4036:466;-1:-1:-1;;;4036:466:5:o;538:3967::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;538:3967:5;;;-1:-1:-1;;538:3967:5:o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./Company.sol\";\n\n/** @author Juan Castellon\n    @title Library to create companies on the platform\n    @dev CompanyFactory is a factory pattern implemented via a Library, that \n        will be used to create new companies. It will basically conglomerate all\n        the logic related to companies creation and it's business rules. \n        At the moment creates instances for every request without any \n        validation, but the plan is to add all business rules here to create \n        companies. \n */\nlibrary CompanyFactory {\n    /** Constants */\n    uint8 public constant MAX_OWNER_COMPANIES = 3; // 1 owner could register up to 3 companies.\n    uint8 public constant MAX_COMPANY_TOKENS = 5; // 1 company could register up to 5 tokens.\n    address public constant EMPTY_ADDRESS = address(0);\n\n    /** Data structures */\n    /** @dev This Data structure is used to define the persistence structure I \n            will use in the Platform contract.\n            I decided to use arrays to be able to iterate through them. This may\n            change for a mapping in the future.\n     */\n    struct Data {\n        mapping(address => address[MAX_OWNER_COMPANIES]) companies; // (owner => companies[3])\n        mapping(address => address[MAX_COMPANY_TOKENS]) tokens; // (company => token[5]))\n    }\n\n    /** Functions */\n    /** @dev First we find the first position available in the companies array, \n            if there is at least one available position for this owner address \n            (max 3 per owner), we create the company, add it to the companies \n            array and return it. As this is a library we will inherit the \n            context of the contract that is calling it (Platform), this is due \n            to the nature of low level calls to libraries (delegatecall).\n        @param self This function will receive the object (where the data is \n                stored) they are called on as their first parameter.\n        @param aCompanyName string with the name to use for this company.\n        @param aPhone string with the phone number for this company.\n        @param aUrl string with the URL for this company.\n        @param aDid string with company's uPort DID (not used yet).\n        @param uPortAdd uPort Ethr address (not used yet).\n        @return a new company instance.\n     */\n    function createCompany(\n        Data storage self,\n        string calldata aCompanyName,\n        string calldata aPhone,\n        string calldata aUrl,\n        string calldata aDid,\n        address uPortAdd\n    ) \n        external \n        returns (Company) \n    {\n        uint8 position = nextCompanyAvailablePosition(self);\n        require(\n            MAX_OWNER_COMPANIES > position,\n            \"You can't create a new company. Max limit reached (3 companies)\"\n        );\n        Company newCompany = new Company(\n            msg.sender,\n            aCompanyName,\n            aPhone,\n            aUrl,\n            aDid,\n            uPortAdd\n        );\n        self.companies[msg.sender][position] = address(newCompany);\n        return newCompany;\n    }\n\n    /** @dev Utility function to expose the functionality of \n            nextCompanyAvailablePosition() for testing purposes.\n        @param self This function will receive the object (where the data is \n                stored) they are called on as their first parameter.\n        @return next available position in the companies array.\n     */\n    function nextCompanyAvailablePositionUtil(Data storage self)\n        external\n        view\n        returns (uint8)\n    {\n        return nextCompanyAvailablePosition(self);\n    }\n\n    /** @dev Looks for the next available position in the companies array and \n            returns that position.\n        @param self This function will receive the object (where the data is \n                stored) they are called on as their first parameter.\n        @return next available position in the companies array or MAX_OWNER_COMPANIES\n                if no position available.\n     */\n    function nextCompanyAvailablePosition(Data storage self)\n        internal\n        view\n        returns (uint8)\n    {\n        address[MAX_OWNER_COMPANIES] memory ownerCompanies = self.companies[msg.sender];\n        for (uint8 i = 0; i < MAX_OWNER_COMPANIES; i++) {\n            if (ownerCompanies[i] == EMPTY_ADDRESS) {\n                return i; // first position available.\n            }\n        }\n        return MAX_OWNER_COMPANIES; // No empty spot available.\n    }\n\n}\n",
  "sourcePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/CompanyFactory.sol",
  "ast": {
    "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/CompanyFactory.sol",
    "exportedSymbols": {
      "CompanyFactory": [
        930
      ]
    },
    "id": 931,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 791,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/Company.sol",
        "file": "./Company.sol",
        "id": 792,
        "nodeType": "ImportDirective",
        "scope": 931,
        "sourceUnit": 790,
        "src": "25:23:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          789
        ],
        "contractKind": "library",
        "documentation": "@author Juan Castellon\n@title Library to create companies on the platform\n@dev CompanyFactory is a factory pattern implemented via a Library, that \nwill be used to create new companies. It will basically conglomerate all\nthe logic related to companies creation and it's business rules. \nAt the moment creates instances for every request without any \nvalidation, but the plan is to add all business rules here to create \ncompanies. ",
        "fullyImplemented": true,
        "id": 930,
        "linearizedBaseContracts": [
          930
        ],
        "name": "CompanyFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 795,
            "name": "MAX_OWNER_COMPANIES",
            "nodeType": "VariableDeclaration",
            "scope": 930,
            "src": "588:45:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 793,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "588:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "33",
              "id": 794,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "632:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 798,
            "name": "MAX_COMPANY_TOKENS",
            "nodeType": "VariableDeclaration",
            "scope": 930,
            "src": "684:44:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 796,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "684:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 797,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "727:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 803,
            "name": "EMPTY_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 930,
            "src": "778:50:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 799,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "778:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "30",
                  "id": 801,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "826:1:5",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 800,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "818:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 802,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "818:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "CompanyFactory.Data",
            "id": 816,
            "members": [
              {
                "constant": false,
                "id": 809,
                "name": "companies",
                "nodeType": "VariableDeclaration",
                "scope": 816,
                "src": "1148:58:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$3_storage_$",
                  "typeString": "mapping(address => address[3])"
                },
                "typeName": {
                  "id": 808,
                  "keyType": {
                    "id": 804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1156:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1148:48:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$3_storage_$",
                    "typeString": "mapping(address => address[3])"
                  },
                  "valueType": {
                    "baseType": {
                      "id": 805,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1167:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 807,
                    "length": {
                      "argumentTypes": null,
                      "id": 806,
                      "name": "MAX_OWNER_COMPANIES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "1175:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1167:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                      "typeString": "address[3]"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 815,
                "name": "tokens",
                "nodeType": "VariableDeclaration",
                "scope": 816,
                "src": "1243:54:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$5_storage_$",
                  "typeString": "mapping(address => address[5])"
                },
                "typeName": {
                  "id": 814,
                  "keyType": {
                    "id": 810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1243:47:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$5_storage_$",
                    "typeString": "mapping(address => address[5])"
                  },
                  "valueType": {
                    "baseType": {
                      "id": 811,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1262:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 813,
                    "length": {
                      "argumentTypes": null,
                      "id": 812,
                      "name": "MAX_COMPANY_TOKENS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 798,
                      "src": "1270:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1262:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$5_storage_ptr",
                      "typeString": "address[5]"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Data",
            "nodeType": "StructDefinition",
            "scope": 930,
            "src": "1126:204:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 874,
              "nodeType": "Block",
              "src": "2611:493:5",
              "statements": [
                {
                  "assignments": [
                    834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 834,
                      "name": "position",
                      "nodeType": "VariableDeclaration",
                      "scope": 874,
                      "src": "2621:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 833,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2621:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 838,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 836,
                        "name": "self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "2667:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      ],
                      "id": 835,
                      "name": "nextCompanyAvailablePosition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 929,
                      "src": "2638:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Data_$816_storage_ptr_$returns$_t_uint8_$",
                        "typeString": "function (struct CompanyFactory.Data storage pointer) view returns (uint8)"
                      }
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2638:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2621:51:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 840,
                          "name": "MAX_OWNER_COMPANIES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 795,
                          "src": "2703:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 841,
                          "name": "position",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 834,
                          "src": "2725:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2703:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f752063616e2774206372656174652061206e657720636f6d70616e792e204d6178206c696d6974207265616368656420283320636f6d70616e69657329",
                        "id": 843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2747:65:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3f1a15a7369105a2d624333e34c9eefbb351a52a2b3ea9f785e8cf563912e11",
                          "typeString": "literal_string \"You can't create a new company. Max limit reached (3 companies)\""
                        },
                        "value": "You can't create a new company. Max limit reached (3 companies)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3f1a15a7369105a2d624333e34c9eefbb351a52a2b3ea9f785e8cf563912e11",
                          "typeString": "literal_string \"You can't create a new company. Max limit reached (3 companies)\""
                        }
                      ],
                      "id": 839,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1694,
                        1695
                      ],
                      "referencedDeclaration": 1695,
                      "src": "2682:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2682:140:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 845,
                  "nodeType": "ExpressionStatement",
                  "src": "2682:140:5"
                },
                {
                  "assignments": [
                    847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 847,
                      "name": "newCompany",
                      "nodeType": "VariableDeclaration",
                      "scope": 874,
                      "src": "2832:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Company_$789",
                        "typeString": "contract Company"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 846,
                        "name": "Company",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 789,
                        "src": "2832:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Company_$789",
                          "typeString": "contract Company"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 858,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 850,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1691,
                          "src": "2878:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2878:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 852,
                        "name": "aCompanyName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "2902:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 853,
                        "name": "aPhone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 822,
                        "src": "2928:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 854,
                        "name": "aUrl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "2948:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 855,
                        "name": "aDid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 826,
                        "src": "2966:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 856,
                        "name": "uPortAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 828,
                        "src": "2984:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2853:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_Company_$789_$",
                        "typeString": "function (address,string memory,string memory,string memory,string memory,address) returns (contract Company)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 848,
                        "name": "Company",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 789,
                        "src": "2857:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Company_$789",
                          "typeString": "contract Company"
                        }
                      }
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2853:149:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Company_$789",
                      "typeString": "contract Company"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2832:170:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 859,
                            "name": "self",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 818,
                            "src": "3012:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                              "typeString": "struct CompanyFactory.Data storage pointer"
                            }
                          },
                          "id": 864,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "companies",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 809,
                          "src": "3012:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$3_storage_$",
                            "typeString": "mapping(address => address[3] storage ref)"
                          }
                        },
                        "id": 865,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 861,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1691,
                            "src": "3027:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3027:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3012:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_storage",
                          "typeString": "address[3] storage ref"
                        }
                      },
                      "id": 866,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 863,
                        "name": "position",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 834,
                        "src": "3039:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3012:36:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 868,
                          "name": "newCompany",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 847,
                          "src": "3059:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Company_$789",
                            "typeString": "contract Company"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Company_$789",
                            "typeString": "contract Company"
                          }
                        ],
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3051:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3051:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3012:58:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "3012:58:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 872,
                    "name": "newCompany",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 847,
                    "src": "3087:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Company_$789",
                      "typeString": "contract Company"
                    }
                  },
                  "functionReturnParameters": 832,
                  "id": 873,
                  "nodeType": "Return",
                  "src": "3080:17:5"
                }
              ]
            },
            "documentation": "@dev First we find the first position available in the companies array, \nif there is at least one available position for this owner address \n(max 3 per owner), we create the company, add it to the companies \narray and return it. As this is a library we will inherit the \ncontext of the contract that is calling it (Platform), this is due \nto the nature of low level calls to libraries (delegatecall).\n@param self This function will receive the object (where the data is \nstored) they are called on as their first parameter.\n@param aCompanyName string with the name to use for this company.\n@param aPhone string with the phone number for this company.\n@param aUrl string with the URL for this company.\n@param aDid string with company's uPort DID (not used yet).\n@param uPortAdd uPort Ethr address (not used yet).\n@return a new company instance.",
            "id": 875,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "name": "self",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "2381:17:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                    "typeString": "struct CompanyFactory.Data"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 817,
                    "name": "Data",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 816,
                    "src": "2381:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                      "typeString": "struct CompanyFactory.Data"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 820,
                  "name": "aCompanyName",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "2408:28:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2408:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 822,
                  "name": "aPhone",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "2446:22:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2446:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 824,
                  "name": "aUrl",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "2478:20:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2478:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 826,
                  "name": "aDid",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "2508:20:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2508:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 828,
                  "name": "uPortAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "2538:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2538:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2371:189:5"
            },
            "returnParameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 831,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "2597:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Company_$789",
                    "typeString": "contract Company"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 830,
                    "name": "Company",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 789,
                    "src": "2597:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Company_$789",
                      "typeString": "contract Company"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2596:9:5"
            },
            "scope": 930,
            "src": "2349:755:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 886,
              "nodeType": "Block",
              "src": "3575:58:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 883,
                        "name": "self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 877,
                        "src": "3621:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      ],
                      "id": 882,
                      "name": "nextCompanyAvailablePosition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 929,
                      "src": "3592:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Data_$816_storage_ptr_$returns$_t_uint8_$",
                        "typeString": "function (struct CompanyFactory.Data storage pointer) view returns (uint8)"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3592:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 881,
                  "id": 885,
                  "nodeType": "Return",
                  "src": "3585:41:5"
                }
              ]
            },
            "documentation": "@dev Utility function to expose the functionality of \nnextCompanyAvailablePosition() for testing purposes.\n@param self This function will receive the object (where the data is \nstored) they are called on as their first parameter.\n@return next available position in the companies array.",
            "id": 887,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextCompanyAvailablePositionUtil",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 877,
                  "name": "self",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "3498:17:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                    "typeString": "struct CompanyFactory.Data"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 876,
                    "name": "Data",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 816,
                    "src": "3498:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                      "typeString": "struct CompanyFactory.Data"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3497:19:5"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 880,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "3564:5:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3564:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3563:7:5"
            },
            "scope": 930,
            "src": "3456:177:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 928,
              "nodeType": "Block",
              "src": "4151:351:5",
              "statements": [
                {
                  "assignments": [
                    898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 898,
                      "name": "ownerCompanies",
                      "nodeType": "VariableDeclaration",
                      "scope": 928,
                      "src": "4161:50:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                        "typeString": "address[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 896,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4161:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 897,
                        "length": {
                          "argumentTypes": null,
                          "id": 895,
                          "name": "MAX_OWNER_COMPANIES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 795,
                          "src": "4169:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "4161:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                          "typeString": "address[3]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 904,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 899,
                        "name": "self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 889,
                        "src": "4214:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      },
                      "id": 900,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "companies",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 809,
                      "src": "4214:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$3_storage_$",
                        "typeString": "mapping(address => address[3] storage ref)"
                      }
                    },
                    "id": 903,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 901,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1691,
                        "src": "4229:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4229:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4214:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage",
                      "typeString": "address[3] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4161:79:5"
                },
                {
                  "body": {
                    "id": 924,
                    "nodeType": "Block",
                    "src": "4298:134:5",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 915,
                              "name": "ownerCompanies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 898,
                              "src": "4316:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                                "typeString": "address[3] memory"
                              }
                            },
                            "id": 917,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 916,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "4331:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4316:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 918,
                            "name": "EMPTY_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 803,
                            "src": "4337:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4316:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 923,
                        "nodeType": "IfStatement",
                        "src": "4312:110:5",
                        "trueBody": {
                          "id": 922,
                          "nodeType": "Block",
                          "src": "4352:70:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 920,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 906,
                                "src": "4377:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "functionReturnParameters": 893,
                              "id": 921,
                              "nodeType": "Return",
                              "src": "4370:8:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 909,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 906,
                      "src": "4268:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 910,
                      "name": "MAX_OWNER_COMPANIES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "4272:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4268:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 925,
                  "initializationExpression": {
                    "assignments": [
                      906
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 906,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 925,
                        "src": "4255:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4255:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 908,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4265:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4255:11:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4293:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 912,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "4293:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 914,
                    "nodeType": "ExpressionStatement",
                    "src": "4293:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "4250:182:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 926,
                    "name": "MAX_OWNER_COMPANIES",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 795,
                    "src": "4448:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 893,
                  "id": 927,
                  "nodeType": "Return",
                  "src": "4441:26:5"
                }
              ]
            },
            "documentation": "@dev Looks for the next available position in the companies array and \nreturns that position.\n@param self This function will receive the object (where the data is \nstored) they are called on as their first parameter.\n@return next available position in the companies array or MAX_OWNER_COMPANIES\nif no position available.",
            "id": 929,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextCompanyAvailablePosition",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 889,
                  "name": "self",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "4074:17:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                    "typeString": "struct CompanyFactory.Data"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 888,
                    "name": "Data",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 816,
                    "src": "4074:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                      "typeString": "struct CompanyFactory.Data"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4073:19:5"
            },
            "returnParameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "4140:5:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4140:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4139:7:5"
            },
            "scope": 930,
            "src": "4036:466:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 931,
        "src": "538:3967:5"
      }
    ],
    "src": "0:4506:5"
  },
  "legacyAST": {
    "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/CompanyFactory.sol",
    "exportedSymbols": {
      "CompanyFactory": [
        930
      ]
    },
    "id": 931,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 791,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/Company.sol",
        "file": "./Company.sol",
        "id": 792,
        "nodeType": "ImportDirective",
        "scope": 931,
        "sourceUnit": 790,
        "src": "25:23:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          789
        ],
        "contractKind": "library",
        "documentation": "@author Juan Castellon\n@title Library to create companies on the platform\n@dev CompanyFactory is a factory pattern implemented via a Library, that \nwill be used to create new companies. It will basically conglomerate all\nthe logic related to companies creation and it's business rules. \nAt the moment creates instances for every request without any \nvalidation, but the plan is to add all business rules here to create \ncompanies. ",
        "fullyImplemented": true,
        "id": 930,
        "linearizedBaseContracts": [
          930
        ],
        "name": "CompanyFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 795,
            "name": "MAX_OWNER_COMPANIES",
            "nodeType": "VariableDeclaration",
            "scope": 930,
            "src": "588:45:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 793,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "588:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "33",
              "id": 794,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "632:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 798,
            "name": "MAX_COMPANY_TOKENS",
            "nodeType": "VariableDeclaration",
            "scope": 930,
            "src": "684:44:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 796,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "684:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 797,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "727:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 803,
            "name": "EMPTY_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 930,
            "src": "778:50:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 799,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "778:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "30",
                  "id": 801,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "826:1:5",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 800,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "818:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 802,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "818:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "CompanyFactory.Data",
            "id": 816,
            "members": [
              {
                "constant": false,
                "id": 809,
                "name": "companies",
                "nodeType": "VariableDeclaration",
                "scope": 816,
                "src": "1148:58:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$3_storage_$",
                  "typeString": "mapping(address => address[3])"
                },
                "typeName": {
                  "id": 808,
                  "keyType": {
                    "id": 804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1156:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1148:48:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$3_storage_$",
                    "typeString": "mapping(address => address[3])"
                  },
                  "valueType": {
                    "baseType": {
                      "id": 805,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1167:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 807,
                    "length": {
                      "argumentTypes": null,
                      "id": 806,
                      "name": "MAX_OWNER_COMPANIES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "1175:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1167:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                      "typeString": "address[3]"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 815,
                "name": "tokens",
                "nodeType": "VariableDeclaration",
                "scope": 816,
                "src": "1243:54:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$5_storage_$",
                  "typeString": "mapping(address => address[5])"
                },
                "typeName": {
                  "id": 814,
                  "keyType": {
                    "id": 810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1243:47:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$5_storage_$",
                    "typeString": "mapping(address => address[5])"
                  },
                  "valueType": {
                    "baseType": {
                      "id": 811,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1262:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 813,
                    "length": {
                      "argumentTypes": null,
                      "id": 812,
                      "name": "MAX_COMPANY_TOKENS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 798,
                      "src": "1270:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1262:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$5_storage_ptr",
                      "typeString": "address[5]"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Data",
            "nodeType": "StructDefinition",
            "scope": 930,
            "src": "1126:204:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 874,
              "nodeType": "Block",
              "src": "2611:493:5",
              "statements": [
                {
                  "assignments": [
                    834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 834,
                      "name": "position",
                      "nodeType": "VariableDeclaration",
                      "scope": 874,
                      "src": "2621:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 833,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2621:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 838,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 836,
                        "name": "self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "2667:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      ],
                      "id": 835,
                      "name": "nextCompanyAvailablePosition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 929,
                      "src": "2638:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Data_$816_storage_ptr_$returns$_t_uint8_$",
                        "typeString": "function (struct CompanyFactory.Data storage pointer) view returns (uint8)"
                      }
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2638:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2621:51:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 840,
                          "name": "MAX_OWNER_COMPANIES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 795,
                          "src": "2703:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 841,
                          "name": "position",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 834,
                          "src": "2725:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2703:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f752063616e2774206372656174652061206e657720636f6d70616e792e204d6178206c696d6974207265616368656420283320636f6d70616e69657329",
                        "id": 843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2747:65:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3f1a15a7369105a2d624333e34c9eefbb351a52a2b3ea9f785e8cf563912e11",
                          "typeString": "literal_string \"You can't create a new company. Max limit reached (3 companies)\""
                        },
                        "value": "You can't create a new company. Max limit reached (3 companies)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3f1a15a7369105a2d624333e34c9eefbb351a52a2b3ea9f785e8cf563912e11",
                          "typeString": "literal_string \"You can't create a new company. Max limit reached (3 companies)\""
                        }
                      ],
                      "id": 839,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1694,
                        1695
                      ],
                      "referencedDeclaration": 1695,
                      "src": "2682:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2682:140:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 845,
                  "nodeType": "ExpressionStatement",
                  "src": "2682:140:5"
                },
                {
                  "assignments": [
                    847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 847,
                      "name": "newCompany",
                      "nodeType": "VariableDeclaration",
                      "scope": 874,
                      "src": "2832:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Company_$789",
                        "typeString": "contract Company"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 846,
                        "name": "Company",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 789,
                        "src": "2832:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Company_$789",
                          "typeString": "contract Company"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 858,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 850,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1691,
                          "src": "2878:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2878:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 852,
                        "name": "aCompanyName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "2902:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 853,
                        "name": "aPhone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 822,
                        "src": "2928:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 854,
                        "name": "aUrl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "2948:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 855,
                        "name": "aDid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 826,
                        "src": "2966:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 856,
                        "name": "uPortAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 828,
                        "src": "2984:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2853:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_Company_$789_$",
                        "typeString": "function (address,string memory,string memory,string memory,string memory,address) returns (contract Company)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 848,
                        "name": "Company",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 789,
                        "src": "2857:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Company_$789",
                          "typeString": "contract Company"
                        }
                      }
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2853:149:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Company_$789",
                      "typeString": "contract Company"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2832:170:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 859,
                            "name": "self",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 818,
                            "src": "3012:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                              "typeString": "struct CompanyFactory.Data storage pointer"
                            }
                          },
                          "id": 864,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "companies",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 809,
                          "src": "3012:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$3_storage_$",
                            "typeString": "mapping(address => address[3] storage ref)"
                          }
                        },
                        "id": 865,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 861,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1691,
                            "src": "3027:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3027:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3012:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_storage",
                          "typeString": "address[3] storage ref"
                        }
                      },
                      "id": 866,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 863,
                        "name": "position",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 834,
                        "src": "3039:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3012:36:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 868,
                          "name": "newCompany",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 847,
                          "src": "3059:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Company_$789",
                            "typeString": "contract Company"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Company_$789",
                            "typeString": "contract Company"
                          }
                        ],
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3051:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3051:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3012:58:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "3012:58:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 872,
                    "name": "newCompany",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 847,
                    "src": "3087:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Company_$789",
                      "typeString": "contract Company"
                    }
                  },
                  "functionReturnParameters": 832,
                  "id": 873,
                  "nodeType": "Return",
                  "src": "3080:17:5"
                }
              ]
            },
            "documentation": "@dev First we find the first position available in the companies array, \nif there is at least one available position for this owner address \n(max 3 per owner), we create the company, add it to the companies \narray and return it. As this is a library we will inherit the \ncontext of the contract that is calling it (Platform), this is due \nto the nature of low level calls to libraries (delegatecall).\n@param self This function will receive the object (where the data is \nstored) they are called on as their first parameter.\n@param aCompanyName string with the name to use for this company.\n@param aPhone string with the phone number for this company.\n@param aUrl string with the URL for this company.\n@param aDid string with company's uPort DID (not used yet).\n@param uPortAdd uPort Ethr address (not used yet).\n@return a new company instance.",
            "id": 875,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "name": "self",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "2381:17:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                    "typeString": "struct CompanyFactory.Data"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 817,
                    "name": "Data",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 816,
                    "src": "2381:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                      "typeString": "struct CompanyFactory.Data"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 820,
                  "name": "aCompanyName",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "2408:28:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2408:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 822,
                  "name": "aPhone",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "2446:22:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2446:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 824,
                  "name": "aUrl",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "2478:20:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2478:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 826,
                  "name": "aDid",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "2508:20:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2508:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 828,
                  "name": "uPortAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "2538:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2538:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2371:189:5"
            },
            "returnParameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 831,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "2597:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Company_$789",
                    "typeString": "contract Company"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 830,
                    "name": "Company",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 789,
                    "src": "2597:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Company_$789",
                      "typeString": "contract Company"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2596:9:5"
            },
            "scope": 930,
            "src": "2349:755:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 886,
              "nodeType": "Block",
              "src": "3575:58:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 883,
                        "name": "self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 877,
                        "src": "3621:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      ],
                      "id": 882,
                      "name": "nextCompanyAvailablePosition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 929,
                      "src": "3592:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Data_$816_storage_ptr_$returns$_t_uint8_$",
                        "typeString": "function (struct CompanyFactory.Data storage pointer) view returns (uint8)"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3592:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 881,
                  "id": 885,
                  "nodeType": "Return",
                  "src": "3585:41:5"
                }
              ]
            },
            "documentation": "@dev Utility function to expose the functionality of \nnextCompanyAvailablePosition() for testing purposes.\n@param self This function will receive the object (where the data is \nstored) they are called on as their first parameter.\n@return next available position in the companies array.",
            "id": 887,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextCompanyAvailablePositionUtil",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 877,
                  "name": "self",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "3498:17:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                    "typeString": "struct CompanyFactory.Data"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 876,
                    "name": "Data",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 816,
                    "src": "3498:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                      "typeString": "struct CompanyFactory.Data"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3497:19:5"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 880,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "3564:5:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3564:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3563:7:5"
            },
            "scope": 930,
            "src": "3456:177:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 928,
              "nodeType": "Block",
              "src": "4151:351:5",
              "statements": [
                {
                  "assignments": [
                    898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 898,
                      "name": "ownerCompanies",
                      "nodeType": "VariableDeclaration",
                      "scope": 928,
                      "src": "4161:50:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                        "typeString": "address[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 896,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4161:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 897,
                        "length": {
                          "argumentTypes": null,
                          "id": 895,
                          "name": "MAX_OWNER_COMPANIES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 795,
                          "src": "4169:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "4161:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                          "typeString": "address[3]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 904,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 899,
                        "name": "self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 889,
                        "src": "4214:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      },
                      "id": 900,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "companies",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 809,
                      "src": "4214:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$3_storage_$",
                        "typeString": "mapping(address => address[3] storage ref)"
                      }
                    },
                    "id": 903,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 901,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1691,
                        "src": "4229:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4229:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4214:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage",
                      "typeString": "address[3] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4161:79:5"
                },
                {
                  "body": {
                    "id": 924,
                    "nodeType": "Block",
                    "src": "4298:134:5",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 915,
                              "name": "ownerCompanies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 898,
                              "src": "4316:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                                "typeString": "address[3] memory"
                              }
                            },
                            "id": 917,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 916,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "4331:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4316:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 918,
                            "name": "EMPTY_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 803,
                            "src": "4337:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4316:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 923,
                        "nodeType": "IfStatement",
                        "src": "4312:110:5",
                        "trueBody": {
                          "id": 922,
                          "nodeType": "Block",
                          "src": "4352:70:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 920,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 906,
                                "src": "4377:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "functionReturnParameters": 893,
                              "id": 921,
                              "nodeType": "Return",
                              "src": "4370:8:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 909,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 906,
                      "src": "4268:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 910,
                      "name": "MAX_OWNER_COMPANIES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "4272:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4268:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 925,
                  "initializationExpression": {
                    "assignments": [
                      906
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 906,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 925,
                        "src": "4255:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4255:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 908,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4265:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4255:11:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4293:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 912,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "4293:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 914,
                    "nodeType": "ExpressionStatement",
                    "src": "4293:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "4250:182:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 926,
                    "name": "MAX_OWNER_COMPANIES",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 795,
                    "src": "4448:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 893,
                  "id": 927,
                  "nodeType": "Return",
                  "src": "4441:26:5"
                }
              ]
            },
            "documentation": "@dev Looks for the next available position in the companies array and \nreturns that position.\n@param self This function will receive the object (where the data is \nstored) they are called on as their first parameter.\n@return next available position in the companies array or MAX_OWNER_COMPANIES\nif no position available.",
            "id": 929,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextCompanyAvailablePosition",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 889,
                  "name": "self",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "4074:17:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                    "typeString": "struct CompanyFactory.Data"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 888,
                    "name": "Data",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 816,
                    "src": "4074:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$816_storage_ptr",
                      "typeString": "struct CompanyFactory.Data"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4073:19:5"
            },
            "returnParameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "4140:5:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4140:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4139:7:5"
            },
            "scope": 930,
            "src": "4036:466:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 931,
        "src": "538:3967:5"
      }
    ],
    "src": "0:4506:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x935D2cBC4Fde6A6b7ff9FC2F2E480655Ddd2C1F3",
      "transactionHash": "0x459ce29e5dc7063a1ae7831dd50f21ba38b44cf4213fc1b8f98ed91cec04a4c9"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xfD38cb55fa6c85bA80d5Fb333a7Fb08fc8392b75",
      "transactionHash": "0x514f3503cf7c45a56ffeb45cd83cec889372f74b7a939a183aefb3fec86f45a5"
    }
  },
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-01-26T16:40:47.161Z",
  "devdoc": {
    "author": "Juan Castellon",
    "details": "CompanyFactory is a factory pattern implemented via a Library, that  will be used to create new companies. It will basically conglomerate all the logic related to companies creation and it's business rules.  At the moment creates instances for every request without any  validation, but the plan is to add all business rules here to create  companies. ",
    "methods": {
      "createCompany(CompanyFactory.Data storage,string,string,string,string,address)": {
        "details": "First we find the first position available in the companies array,  if there is at least one available position for this owner address  (max 3 per owner), we create the company, add it to the companies  array and return it. As this is a library we will inherit the  context of the contract that is calling it (Platform), this is due  to the nature of low level calls to libraries (delegatecall).",
        "params": {
          "aCompanyName": "string with the name to use for this company.",
          "aDid": "string with company's uPort DID (not used yet).",
          "aPhone": "string with the phone number for this company.",
          "aUrl": "string with the URL for this company.",
          "self": "This function will receive the object (where the data is  stored) they are called on as their first parameter.",
          "uPortAdd": "uPort Ethr address (not used yet)."
        },
        "return": "a new company instance."
      },
      "nextCompanyAvailablePositionUtil(CompanyFactory.Data storage)": {
        "details": "Utility function to expose the functionality of  nextCompanyAvailablePosition() for testing purposes.",
        "params": {
          "self": "This function will receive the object (where the data is  stored) they are called on as their first parameter."
        },
        "return": "next available position in the companies array."
      }
    },
    "title": "Library to create companies on the platform"
  },
  "userdoc": {
    "methods": {}
  }
}