{
  "contractName": "TokenFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_COMPANY_TOKENS",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x38abeb43"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_OWNER_COMPANIES",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4642e0ba"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "self",
          "type": "CompanyFactory.Data storage"
        },
        {
          "name": "aCompany",
          "type": "address"
        },
        {
          "name": "aName",
          "type": "string"
        },
        {
          "name": "aSymbol",
          "type": "string"
        },
        {
          "name": "initialAmount",
          "type": "uint256"
        }
      ],
      "name": "createTokenForCompany",
      "outputs": [
        {
          "name": "",
          "type": "Token"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x5f432927"
    }
  ],
  "bytecode": "0x611361610030600b82828239805160001a6073146000811461002057610022565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100545763ffffffff60e060020a60003504166338abeb4381146100595780634642e0ba146100775780635f4329271461007f575b600080fd5b61006161017f565b6040805160ff9092168252519081900360200190f35b610061610184565b81801561008b57600080fd5b50610163600480360360a08110156100a257600080fd5b813591600160a060020a03602082013516918101906060810160408201356401000000008111156100d257600080fd5b8201836020820111156100e457600080fd5b8035906020019184600183028401116401000000008311171561010657600080fd5b91939092909160208101903564010000000081111561012457600080fd5b82018360208201111561013657600080fd5b8035906020019184600183028401116401000000008311171561015857600080fd5b919350915035610189565b60408051600160a060020a039092168252519081900360200190f35b600581565b600381565b600073__CompanyUtil___________________________63f5612fc389896040518363ffffffff1660e060020a0281526004018083815260200182600160a060020a0316600160a060020a031681526020019250505060206040518083038186803b1580156101f757600080fd5b505af415801561020b573d6000803e3d6000fd5b505050506040513d602081101561022157600080fd5b505133600160a060020a038216146102c057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4f6e6c7920636f6d70616e79206f776e65722063616e2065786563757465207460448201527f6869732066756e6374696f6e0000000000000000000000000000000000000000606482015290519081900360840190fd5b60006102cc8a8a610476565b905060ff811660051161036657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f596f752063616e2774206372656174652061206e657720746f6b656e2e204d6160448201527f78206c696d6974207265616368656420283520746f6b656e7329000000000000606482015290519081900360840190fd5b600089338a8a8a8a8a61037761065b565b600160a060020a038089168252871660208201526080810182905260a0604082018181529082018690526060820160c08301888880828437600083820152601f01601f1916909101848103835286815260200190508686808284376000838201819052604051601f909201601f19169093018190039c509a509098505050505050505050f08015801561040e573d6000803e3d6000fd5b50600160a060020a038b16600090815260018d0160205260409020909150819060ff84166005811061043c57fe5b01805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790559a9950505050505050505050565b600073__CompanyUtil___________________________63f5612fc384846040518363ffffffff1660e060020a0281526004018083815260200182600160a060020a0316600160a060020a031681526020019250505060206040518083038186803b1580156104e457600080fd5b505af41580156104f8573d6000803e3d6000fd5b505050506040513d602081101561050e57600080fd5b505133600160a060020a038216146105ad57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4f6e6c7920636f6d70616e79206f776e65722063616e2065786563757465207460448201527f6869732066756e6374696f6e0000000000000000000000000000000000000000606482015290519081900360840190fd5b6105b561066b565b600160a060020a038416600090815260018601602052604090819020815160a08101928390529160059082845b8154600160a060020a031681526001909101906020018083116105e25750939450600093505050505b600560ff8216101561064d5760008260ff83166005811061062857fe5b6020020151600160a060020a031614156106455792506106549050565b60010161060b565b5060059250505b5092915050565b604051610cab8061068b83390190565b60a060405190810160405280600590602082028038833950919291505056fe60806040523480156200001157600080fd5b5060405162000cab38038062000cab833981018060405260a08110156200003757600080fd5b81516020830151604084018051929491938201926401000000008111156200005e57600080fd5b820160208101848111156200007257600080fd5b81516401000000008111828201871017156200008d57600080fd5b50509291906020018051640100000000811115620000aa57600080fd5b82016020810184811115620000be57600080fd5b8151640100000000811182820187101715620000d957600080fd5b505060209182015160008054600160a060020a0319163317815586519295509093508592859262000111916004919086019062000280565b5081516200012790600590602085019062000280565b506006805460008054600160a060020a03808c16600160a060020a031992831617909255336101000261010060a860020a031960ff90961660ff1990941693909317949094169190911790915560078054918a1691909216179055506200019a90508482640100000000620001a5810204565b505050505062000325565b600160a060020a0382161515620001bb57600080fd5b600354620001d89082640100000000620009316200026682021704565b600355600160a060020a0382166000908152600160205260409020546200020e9082640100000000620009316200026682021704565b600160a060020a03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156200027957600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002c357805160ff1916838001178555620002f3565b82800160010185558215620002f3579182015b82811115620002f3578251825591602001919060010190620002d6565b506200030192915062000305565b5090565b6200032291905b808211156200030157600081556001016200030c565b90565b61097680620003356000396000f3fe6080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100c9578063095ea7b31461015357806318160ddd146101a057806323b872dd146101c7578063313ce5671461020a578063395093511461023557806340cb34621461026e57806370a08231146102a35780638da5cb5b146102d657806395d89b4114610307578063a457c2d71461031c578063a9059cbb14610355578063dd62ed3e1461038e575b600080fd5b3480156100d557600080fd5b506100de6103c9565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610118578181015183820152602001610100565b50505050905090810190601f1680156101455780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015f57600080fd5b5061018c6004803603604081101561017657600080fd5b50600160a060020a03813516906020013561045f565b604080519115158252519081900360200190f35b3480156101ac57600080fd5b506101b56104dd565b60408051918252519081900360200190f35b3480156101d357600080fd5b5061018c600480360360608110156101ea57600080fd5b50600160a060020a038135811691602081013590911690604001356104e3565b34801561021657600080fd5b5061021f6105ac565b6040805160ff9092168252519081900360200190f35b34801561024157600080fd5b5061018c6004803603604081101561025857600080fd5b50600160a060020a0381351690602001356105b5565b34801561027a57600080fd5b506102a16004803603602081101561029157600080fd5b5035600160a060020a0316610665565b005b3480156102af57600080fd5b506101b5600480360360208110156102c657600080fd5b5035600160a060020a0316610736565b3480156102e257600080fd5b506102eb610751565b60408051600160a060020a039092168252519081900360200190f35b34801561031357600080fd5b506100de610760565b34801561032857600080fd5b5061018c6004803603604081101561033f57600080fd5b50600160a060020a0381351690602001356107c1565b34801561036157600080fd5b5061018c6004803603604081101561037857600080fd5b50600160a060020a03813516906020013561080c565b34801561039a57600080fd5b506101b5600480360360408110156103b157600080fd5b50600160a060020a0381358116916020013516610822565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104555780601f1061042a57610100808354040283529160200191610455565b820191906000526020600020905b81548152906001019060200180831161043857829003601f168201915b5050505050905090565b6000600160a060020a038316151561047657600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b600160a060020a0383166000908152600260209081526040808320338452909152812054610517908363ffffffff61084d16565b600160a060020a0385166000908152600260209081526040808320338452909152902055610546848484610862565b600160a060020a0384166000818152600260209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60065460ff1690565b6000600160a060020a03831615156105cc57600080fd5b336000908152600260209081526040808320600160a060020a0387168452909152902054610600908363ffffffff61093116565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6000543390600160a060020a0316811461070657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4163636573732064656e6965642e20436f6d70616e79206f776e6572206f6e6c60448201527f792e000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b506000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a031660009081526001602052604090205490565b600054600160a060020a031681565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104555780601f1061042a57610100808354040283529160200191610455565b6000600160a060020a03831615156107d857600080fd5b336000908152600260209081526040808320600160a060020a0387168452909152902054610600908363ffffffff61084d16565b6000610819338484610862565b50600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282111561085c57600080fd5b50900390565b600160a060020a038216151561087757600080fd5b600160a060020a0383166000908152600160205260409020546108a0908263ffffffff61084d16565b600160a060020a0380851660009081526001602052604080822093909355908416815220546108d5908263ffffffff61093116565b600160a060020a0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561094357600080fd5b939250505056fea165627a7a72305820a31aa05fc265c22730a2f44ed74f77c57e9f17e8c5875cc103e31473e6b877930029a165627a7a7230582033d97521a5ac2f03a4f6bf18ae34eeaa450ab25ee0c93862641743725cc2d5dc0029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100545763ffffffff60e060020a60003504166338abeb4381146100595780634642e0ba146100775780635f4329271461007f575b600080fd5b61006161017f565b6040805160ff9092168252519081900360200190f35b610061610184565b81801561008b57600080fd5b50610163600480360360a08110156100a257600080fd5b813591600160a060020a03602082013516918101906060810160408201356401000000008111156100d257600080fd5b8201836020820111156100e457600080fd5b8035906020019184600183028401116401000000008311171561010657600080fd5b91939092909160208101903564010000000081111561012457600080fd5b82018360208201111561013657600080fd5b8035906020019184600183028401116401000000008311171561015857600080fd5b919350915035610189565b60408051600160a060020a039092168252519081900360200190f35b600581565b600381565b600073__CompanyUtil___________________________63f5612fc389896040518363ffffffff1660e060020a0281526004018083815260200182600160a060020a0316600160a060020a031681526020019250505060206040518083038186803b1580156101f757600080fd5b505af415801561020b573d6000803e3d6000fd5b505050506040513d602081101561022157600080fd5b505133600160a060020a038216146102c057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4f6e6c7920636f6d70616e79206f776e65722063616e2065786563757465207460448201527f6869732066756e6374696f6e0000000000000000000000000000000000000000606482015290519081900360840190fd5b60006102cc8a8a610476565b905060ff811660051161036657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f596f752063616e2774206372656174652061206e657720746f6b656e2e204d6160448201527f78206c696d6974207265616368656420283520746f6b656e7329000000000000606482015290519081900360840190fd5b600089338a8a8a8a8a61037761065b565b600160a060020a038089168252871660208201526080810182905260a0604082018181529082018690526060820160c08301888880828437600083820152601f01601f1916909101848103835286815260200190508686808284376000838201819052604051601f909201601f19169093018190039c509a509098505050505050505050f08015801561040e573d6000803e3d6000fd5b50600160a060020a038b16600090815260018d0160205260409020909150819060ff84166005811061043c57fe5b01805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790559a9950505050505050505050565b600073__CompanyUtil___________________________63f5612fc384846040518363ffffffff1660e060020a0281526004018083815260200182600160a060020a0316600160a060020a031681526020019250505060206040518083038186803b1580156104e457600080fd5b505af41580156104f8573d6000803e3d6000fd5b505050506040513d602081101561050e57600080fd5b505133600160a060020a038216146105ad57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4f6e6c7920636f6d70616e79206f776e65722063616e2065786563757465207460448201527f6869732066756e6374696f6e0000000000000000000000000000000000000000606482015290519081900360840190fd5b6105b561066b565b600160a060020a038416600090815260018601602052604090819020815160a08101928390529160059082845b8154600160a060020a031681526001909101906020018083116105e25750939450600093505050505b600560ff8216101561064d5760008260ff83166005811061062857fe5b6020020151600160a060020a031614156106455792506106549050565b60010161060b565b5060059250505b5092915050565b604051610cab8061068b83390190565b60a060405190810160405280600590602082028038833950919291505056fe60806040523480156200001157600080fd5b5060405162000cab38038062000cab833981018060405260a08110156200003757600080fd5b81516020830151604084018051929491938201926401000000008111156200005e57600080fd5b820160208101848111156200007257600080fd5b81516401000000008111828201871017156200008d57600080fd5b50509291906020018051640100000000811115620000aa57600080fd5b82016020810184811115620000be57600080fd5b8151640100000000811182820187101715620000d957600080fd5b505060209182015160008054600160a060020a0319163317815586519295509093508592859262000111916004919086019062000280565b5081516200012790600590602085019062000280565b506006805460008054600160a060020a03808c16600160a060020a031992831617909255336101000261010060a860020a031960ff90961660ff1990941693909317949094169190911790915560078054918a1691909216179055506200019a90508482640100000000620001a5810204565b505050505062000325565b600160a060020a0382161515620001bb57600080fd5b600354620001d89082640100000000620009316200026682021704565b600355600160a060020a0382166000908152600160205260409020546200020e9082640100000000620009316200026682021704565b600160a060020a03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156200027957600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002c357805160ff1916838001178555620002f3565b82800160010185558215620002f3579182015b82811115620002f3578251825591602001919060010190620002d6565b506200030192915062000305565b5090565b6200032291905b808211156200030157600081556001016200030c565b90565b61097680620003356000396000f3fe6080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100c9578063095ea7b31461015357806318160ddd146101a057806323b872dd146101c7578063313ce5671461020a578063395093511461023557806340cb34621461026e57806370a08231146102a35780638da5cb5b146102d657806395d89b4114610307578063a457c2d71461031c578063a9059cbb14610355578063dd62ed3e1461038e575b600080fd5b3480156100d557600080fd5b506100de6103c9565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610118578181015183820152602001610100565b50505050905090810190601f1680156101455780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015f57600080fd5b5061018c6004803603604081101561017657600080fd5b50600160a060020a03813516906020013561045f565b604080519115158252519081900360200190f35b3480156101ac57600080fd5b506101b56104dd565b60408051918252519081900360200190f35b3480156101d357600080fd5b5061018c600480360360608110156101ea57600080fd5b50600160a060020a038135811691602081013590911690604001356104e3565b34801561021657600080fd5b5061021f6105ac565b6040805160ff9092168252519081900360200190f35b34801561024157600080fd5b5061018c6004803603604081101561025857600080fd5b50600160a060020a0381351690602001356105b5565b34801561027a57600080fd5b506102a16004803603602081101561029157600080fd5b5035600160a060020a0316610665565b005b3480156102af57600080fd5b506101b5600480360360208110156102c657600080fd5b5035600160a060020a0316610736565b3480156102e257600080fd5b506102eb610751565b60408051600160a060020a039092168252519081900360200190f35b34801561031357600080fd5b506100de610760565b34801561032857600080fd5b5061018c6004803603604081101561033f57600080fd5b50600160a060020a0381351690602001356107c1565b34801561036157600080fd5b5061018c6004803603604081101561037857600080fd5b50600160a060020a03813516906020013561080c565b34801561039a57600080fd5b506101b5600480360360408110156103b157600080fd5b50600160a060020a0381358116916020013516610822565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104555780601f1061042a57610100808354040283529160200191610455565b820191906000526020600020905b81548152906001019060200180831161043857829003601f168201915b5050505050905090565b6000600160a060020a038316151561047657600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b600160a060020a0383166000908152600260209081526040808320338452909152812054610517908363ffffffff61084d16565b600160a060020a0385166000908152600260209081526040808320338452909152902055610546848484610862565b600160a060020a0384166000818152600260209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60065460ff1690565b6000600160a060020a03831615156105cc57600080fd5b336000908152600260209081526040808320600160a060020a0387168452909152902054610600908363ffffffff61093116565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6000543390600160a060020a0316811461070657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4163636573732064656e6965642e20436f6d70616e79206f776e6572206f6e6c60448201527f792e000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b506000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a031660009081526001602052604090205490565b600054600160a060020a031681565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104555780601f1061042a57610100808354040283529160200191610455565b6000600160a060020a03831615156107d857600080fd5b336000908152600260209081526040808320600160a060020a0387168452909152902054610600908363ffffffff61084d16565b6000610819338484610862565b50600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282111561085c57600080fd5b50900390565b600160a060020a038216151561087757600080fd5b600160a060020a0383166000908152600160205260409020546108a0908263ffffffff61084d16565b600160a060020a0380851660009081526001602052604080822093909355908416815220546108d5908263ffffffff61093116565b600160a060020a0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561094357600080fd5b939250505056fea165627a7a72305820a31aa05fc265c22730a2f44ed74f77c57e9f17e8c5875cc103e31473e6b877930029a165627a7a7230582033d97521a5ac2f03a4f6bf18ae34eeaa450ab25ee0c93862641743725cc2d5dc0029",
  "sourceMap": "631:2342:11:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "631:2342:11:-;;;;;;;;;;;;-1:-1:-1;;;631:2342:11;;;;;;;;;;;;;;;;;;;;;;;775:44;;;;;;;;;;;;;;;;;;;;;;;679:45;;;;2121:849;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2121:849:11;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2121:849:11;;;-1:-1:-1;;;;;2121:849:11;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2121:849:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2121:849:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2121:849:11;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2121:849:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2121:849:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2121:849:11;;-1:-1:-1;2121:849:11;-1:-1:-1;2121:849:11;;;;;;;-1:-1:-1;;;;;2121:849:11;;;;;;;;;;;;;;775:44;818:1;775:44;:::o;679:45::-;723:1;679:45;:::o;2121:849::-;2428:5;2365:11;:28;2394:4;2400:8;2365:44;;;;;-1:-1:-1;;;2365:44:11;;;;;;;;;;;;-1:-1:-1;;;;;2365:44:11;-1:-1:-1;;;;;2365:44:11;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2365:44:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2365:44:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2365:44:11;1076:10;-1:-1:-1;;;;;1076:26:11;;;1055:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2450:18;2471:95;2521:4;2547:8;2471:36;:95::i;:::-;2450:116;-1:-1:-1;2597:33:11;;;818:1;2597:33;2576:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2724:14;2764:8;2786:10;2810:5;;2829:7;;2850:13;2741:132;;:::i;:::-;-1:-1:-1;;;;;2741:132:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1:33:-1;99:1;81:16;;;74:27;137:4;117:14;-1:-1;;113:30;157:16;;;2741:132:11;;;;;;;;;;;-1:-1:-1;2741:132:11;;;;;1:33:-1;99:1;81:16;;;74:27;;;2741:132:11;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;2741:132:11;;;;-1:-1:-1;2741:132:11;-1:-1:-1;99:1;;-1:-1;;;;;;;;;2741:132:11;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;;;;2883:21:11;;;;;;:11;;;:21;;;;;2724:149;;-1:-1:-1;2724:149:11;;2883:35;;;;;;;;;;;:55;;-1:-1:-1;;2883:55:11;-1:-1:-1;;;;;2883:55:11;;;;;;;;;;2955:8;2121:849;-1:-1:-1;;;;;;;;;;2121:849:11:o;1756:584:12:-;1987:5;1924:11;:28;1953:4;1959:8;1924:44;;;;;-1:-1:-1;;;1924:44:12;;;;;;;;;;;;-1:-1:-1;;;;;1924:44:12;-1:-1:-1;;;;;1924:44:12;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1924:44:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1924:44:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1924:44:12;1013:10;-1:-1:-1;;;;;1013:26:12;;;992:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2009:48;;:::i;:::-;-1:-1:-1;;;;;2060:21:12;;;;;;:11;;;:21;;;;;;;2009:72;;;;;;;;;;;;2060:21;2009:72;;;;-1:-1:-1;;;;;2009:72:12;;;;;;;;;;;;;;;-1:-1:-1;2009:72:12;;-1:-1:-1;2096:7:12;;-1:-1:-1;;;;2091:180:12;779:1;2109:22;;;;2091:180;;;878:1;2156:13;:16;;;;;;;;;;;;;;-1:-1:-1;;;;;2156:33:12;;2152:109;;;2216:1;-1:-1:-1;2209:8:12;;-1:-1:-1;2209:8:12;2152:109;2133:3;;2091:180;;;;779:1;2280:25;;;1119:1;1756:584;;;;;:::o;631:2342:11:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;631:2342:11;;;-1:-1:-1;;631:2342:11:o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./Company.sol\";\nimport \"./Token.sol\";\nimport \"./CompanyFactory.sol\";\nimport \"./CompanyUtil.sol\";\nimport \"./TokenUtil.sol\";\n\n/** @author Juan Castellon\n    @title Library to create tokens on the platform\n    @dev TokenFactory is a factory pattern implemented via a Library, that \n        will be used to create new tokens. It will basically conglomerate all\n        the logic related to tokens creation and it's business rules. \n        At the moment creates instances for every request without any \n        validation, but the plan is to add all business rules here to create \n        tokens. \n */\nlibrary TokenFactory {\n    /** Constants */\n    uint8 public constant MAX_OWNER_COMPANIES = 3; // 1 owner could register up to 3 companies.\n    uint8 public constant MAX_COMPANY_TOKENS = 5; // 1 company could register up to 10 tokens.\n    address internal constant EMPTY_ADDRESS = address(0);\n\n    /** Modifiers */\n    /** @dev Verify caller is company owner */\n    modifier onlyCompanyOwner(address companyOwner) {\n        require(\n            msg.sender == companyOwner,\n            \"Only company owner can execute this function\"\n        );\n        _;\n    }\n\n    /** Functions */\n    /** @dev This function will create a token on the Platform. It will first\n            validate that who is trying to create this token is the owner of the\n            company. If it is the owner, then it will search for a position \n            available in the tokens array. If an available position is found, \n            then it will create a new Token instance and add it to the tokens\n            array of that company.\n        @param self This function will receive the object (where the data is \n                stored) they are called on as their first parameter.\n        @param aCompany address of the company that wants to create this token.\n        @param aName string with the name of the token.\n        @param aSymbol string with a 3 chars (aprox) token symbol.\n        @param initialAmount uint256 with initial supply for this token.\n        @return the token recently created. \n     */\n    function createTokenForCompany(\n        CompanyFactory.Data storage self,\n        address aCompany,\n        string calldata aName,\n        string calldata aSymbol,\n        uint256 initialAmount\n    ) \n        external \n        onlyCompanyOwner(CompanyUtil.findCompanyOwner(self, aCompany))\n        returns (Token) \n    {\n        uint8 nextPosition = TokenUtil.nextTokenAvailablePosition(\n            self,\n            address(aCompany)\n        );\n        require(\n            MAX_COMPANY_TOKENS > nextPosition,\n            \"You can't create a new token. Max limit reached (5 tokens)\"\n        );\n        Token newToken = new Token(\n            aCompany,\n            msg.sender,\n            aName,\n            aSymbol,\n            initialAmount\n        );\n        self.tokens[aCompany][nextPosition] = address(newToken);\n        return newToken;\n    }\n\n}\n",
  "sourcePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/TokenFactory.sol",
  "ast": {
    "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/TokenFactory.sol",
    "exportedSymbols": {
      "TokenFactory": [
        1533
      ]
    },
    "id": 1534,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1436,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/Company.sol",
        "file": "./Company.sol",
        "id": 1437,
        "nodeType": "ImportDirective",
        "scope": 1534,
        "sourceUnit": 790,
        "src": "25:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/Token.sol",
        "file": "./Token.sol",
        "id": 1438,
        "nodeType": "ImportDirective",
        "scope": 1534,
        "sourceUnit": 1435,
        "src": "49:21:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/CompanyFactory.sol",
        "file": "./CompanyFactory.sol",
        "id": 1439,
        "nodeType": "ImportDirective",
        "scope": 1534,
        "sourceUnit": 920,
        "src": "71:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/CompanyUtil.sol",
        "file": "./CompanyUtil.sol",
        "id": 1440,
        "nodeType": "ImportDirective",
        "scope": 1534,
        "sourceUnit": 986,
        "src": "102:27:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/TokenUtil.sol",
        "file": "./TokenUtil.sol",
        "id": 1441,
        "nodeType": "ImportDirective",
        "scope": 1534,
        "sourceUnit": 1690,
        "src": "130:25:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          1434
        ],
        "contractKind": "library",
        "documentation": "@author Juan Castellon\n@title Library to create tokens on the platform\n@dev TokenFactory is a factory pattern implemented via a Library, that \nwill be used to create new tokens. It will basically conglomerate all\nthe logic related to tokens creation and it's business rules. \nAt the moment creates instances for every request without any \nvalidation, but the plan is to add all business rules here to create \ntokens. ",
        "fullyImplemented": true,
        "id": 1533,
        "linearizedBaseContracts": [
          1533
        ],
        "name": "TokenFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1444,
            "name": "MAX_OWNER_COMPANIES",
            "nodeType": "VariableDeclaration",
            "scope": 1533,
            "src": "679:45:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1442,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "679:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "33",
              "id": 1443,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "723:1:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1447,
            "name": "MAX_COMPANY_TOKENS",
            "nodeType": "VariableDeclaration",
            "scope": 1533,
            "src": "775:44:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1445,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "775:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 1446,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "818:1:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1452,
            "name": "EMPTY_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 1533,
            "src": "870:52:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1448,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "870:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "30",
                  "id": 1450,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "920:1:11",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 1449,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "912:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 1451,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "912:10:11",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1465,
              "nodeType": "Block",
              "src": "1045:145:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1457,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1704,
                            "src": "1076:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1076:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1459,
                          "name": "companyOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1454,
                          "src": "1090:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1076:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c7920636f6d70616e79206f776e65722063616e206578656375746520746869732066756e6374696f6e",
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1116:46:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_902c19f8fadccdb59d78ddff95b9a89705512fd8f607a38a0edfed89b93a1938",
                          "typeString": "literal_string \"Only company owner can execute this function\""
                        },
                        "value": "Only company owner can execute this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_902c19f8fadccdb59d78ddff95b9a89705512fd8f607a38a0edfed89b93a1938",
                          "typeString": "literal_string \"Only company owner can execute this function\""
                        }
                      ],
                      "id": 1456,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1707,
                        1708
                      ],
                      "referencedDeclaration": 1708,
                      "src": "1055:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1055:117:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1463,
                  "nodeType": "ExpressionStatement",
                  "src": "1055:117:11"
                },
                {
                  "id": 1464,
                  "nodeType": "PlaceholderStatement",
                  "src": "1182:1:11"
                }
              ]
            },
            "documentation": "@dev Verify caller is company owner ",
            "id": 1466,
            "name": "onlyCompanyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1454,
                  "name": "companyOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1466,
                  "src": "1023:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1022:22:11"
            },
            "src": "997:193:11",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1531,
              "nodeType": "Block",
              "src": "2440:530:11",
              "statements": [
                {
                  "assignments": [
                    1489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1489,
                      "name": "nextPosition",
                      "nodeType": "VariableDeclaration",
                      "scope": 1531,
                      "src": "2450:18:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1488,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2450:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1497,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1492,
                        "name": "self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1468,
                        "src": "2521:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1494,
                            "name": "aCompany",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1470,
                            "src": "2547:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2539:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2539:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1490,
                        "name": "TokenUtil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1689,
                        "src": "2471:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenUtil_$1689_$",
                          "typeString": "type(library TokenUtil)"
                        }
                      },
                      "id": 1491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nextTokenAvailablePosition",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1613,
                      "src": "2471:36:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Data_$817_storage_ptr_$_t_address_$returns$_t_uint8_$",
                        "typeString": "function (struct CompanyFactory.Data storage pointer,address) view returns (uint8)"
                      }
                    },
                    "id": 1496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2471:95:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2450:116:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1499,
                          "name": "MAX_COMPANY_TOKENS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1447,
                          "src": "2597:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1500,
                          "name": "nextPosition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1489,
                          "src": "2618:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2597:33:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f752063616e2774206372656174652061206e657720746f6b656e2e204d6178206c696d6974207265616368656420283520746f6b656e7329",
                        "id": 1502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2644:60:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e0586d094df9cb919e83219ede5ba2c8cfcb9bccd78df3e7e2ff29f79629f78",
                          "typeString": "literal_string \"You can't create a new token. Max limit reached (5 tokens)\""
                        },
                        "value": "You can't create a new token. Max limit reached (5 tokens)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e0586d094df9cb919e83219ede5ba2c8cfcb9bccd78df3e7e2ff29f79629f78",
                          "typeString": "literal_string \"You can't create a new token. Max limit reached (5 tokens)\""
                        }
                      ],
                      "id": 1498,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1707,
                        1708
                      ],
                      "referencedDeclaration": 1708,
                      "src": "2576:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2576:138:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:138:11"
                },
                {
                  "assignments": [
                    1506
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1506,
                      "name": "newToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1531,
                      "src": "2724:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$1434",
                        "typeString": "contract Token"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1505,
                        "name": "Token",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1434,
                        "src": "2724:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Token_$1434",
                          "typeString": "contract Token"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1516,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1509,
                        "name": "aCompany",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1470,
                        "src": "2764:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1510,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1704,
                          "src": "2786:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2786:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1512,
                        "name": "aName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1472,
                        "src": "2810:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1513,
                        "name": "aSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1474,
                        "src": "2829:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1514,
                        "name": "initialAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1476,
                        "src": "2850:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2741:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_Token_$1434_$",
                        "typeString": "function (address,address,string memory,string memory,uint256) returns (contract Token)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1507,
                        "name": "Token",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1434,
                        "src": "2745:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Token_$1434",
                          "typeString": "contract Token"
                        }
                      }
                    },
                    "id": 1515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2741:132:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$1434",
                      "typeString": "contract Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2724:149:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1517,
                            "name": "self",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1468,
                            "src": "2883:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                              "typeString": "struct CompanyFactory.Data storage pointer"
                            }
                          },
                          "id": 1521,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 816,
                          "src": "2883:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$5_storage_$",
                            "typeString": "mapping(address => address[5] storage ref)"
                          }
                        },
                        "id": 1522,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1519,
                          "name": "aCompany",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1470,
                          "src": "2895:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2883:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$5_storage",
                          "typeString": "address[5] storage ref"
                        }
                      },
                      "id": 1523,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1520,
                        "name": "nextPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1489,
                        "src": "2905:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2883:35:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1525,
                          "name": "newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1506,
                          "src": "2929:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Token_$1434",
                            "typeString": "contract Token"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Token_$1434",
                            "typeString": "contract Token"
                          }
                        ],
                        "id": 1524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2921:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2921:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2883:55:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1528,
                  "nodeType": "ExpressionStatement",
                  "src": "2883:55:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1529,
                    "name": "newToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1506,
                    "src": "2955:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$1434",
                      "typeString": "contract Token"
                    }
                  },
                  "functionReturnParameters": 1487,
                  "id": 1530,
                  "nodeType": "Return",
                  "src": "2948:15:11"
                }
              ]
            },
            "documentation": "@dev This function will create a token on the Platform. It will first\nvalidate that who is trying to create this token is the owner of the\ncompany. If it is the owner, then it will search for a position \navailable in the tokens array. If an available position is found, \nthen it will create a new Token instance and add it to the tokens\narray of that company.\n@param self This function will receive the object (where the data is \nstored) they are called on as their first parameter.\n@param aCompany address of the company that wants to create this token.\n@param aName string with the name of the token.\n@param aSymbol string with a 3 chars (aprox) token symbol.\n@param initialAmount uint256 with initial supply for this token.\n@return the token recently created. ",
            "id": 1532,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1481,
                        "name": "self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1468,
                        "src": "2394:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1482,
                        "name": "aCompany",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1470,
                        "src": "2400:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1479,
                        "name": "CompanyUtil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "2365:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CompanyUtil_$985_$",
                          "typeString": "type(library CompanyUtil)"
                        }
                      },
                      "id": 1480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "findCompanyOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 984,
                      "src": "2365:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Data_$817_storage_ptr_$_t_address_$returns$_t_address_$",
                        "typeString": "function (struct CompanyFactory.Data storage pointer,address) view returns (address)"
                      }
                    },
                    "id": 1483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2365:44:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1484,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1478,
                  "name": "onlyCompanyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1466,
                  "src": "2348:16:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2348:62:11"
              }
            ],
            "name": "createTokenForCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1468,
                  "name": "self",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "2161:32:11",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                    "typeString": "struct CompanyFactory.Data"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1467,
                    "name": "CompanyFactory.Data",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 817,
                    "src": "2161:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                      "typeString": "struct CompanyFactory.Data"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1470,
                  "name": "aCompany",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "2203:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2203:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1472,
                  "name": "aName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "2229:21:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1471,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2229:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1474,
                  "name": "aSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "2260:23:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1473,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2260:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1476,
                  "name": "initialAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "2293:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2293:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2151:169:11"
            },
            "returnParameters": {
              "id": 1487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1486,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "2428:5:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Token_$1434",
                    "typeString": "contract Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1485,
                    "name": "Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1434,
                    "src": "2428:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$1434",
                      "typeString": "contract Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2427:7:11"
            },
            "scope": 1533,
            "src": "2121:849:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1534,
        "src": "631:2342:11"
      }
    ],
    "src": "0:2974:11"
  },
  "legacyAST": {
    "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/TokenFactory.sol",
    "exportedSymbols": {
      "TokenFactory": [
        1533
      ]
    },
    "id": 1534,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1436,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/Company.sol",
        "file": "./Company.sol",
        "id": 1437,
        "nodeType": "ImportDirective",
        "scope": 1534,
        "sourceUnit": 790,
        "src": "25:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/Token.sol",
        "file": "./Token.sol",
        "id": 1438,
        "nodeType": "ImportDirective",
        "scope": 1534,
        "sourceUnit": 1435,
        "src": "49:21:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/CompanyFactory.sol",
        "file": "./CompanyFactory.sol",
        "id": 1439,
        "nodeType": "ImportDirective",
        "scope": 1534,
        "sourceUnit": 920,
        "src": "71:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/CompanyUtil.sol",
        "file": "./CompanyUtil.sol",
        "id": 1440,
        "nodeType": "ImportDirective",
        "scope": 1534,
        "sourceUnit": 986,
        "src": "102:27:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/TokenUtil.sol",
        "file": "./TokenUtil.sol",
        "id": 1441,
        "nodeType": "ImportDirective",
        "scope": 1534,
        "sourceUnit": 1690,
        "src": "130:25:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          1434
        ],
        "contractKind": "library",
        "documentation": "@author Juan Castellon\n@title Library to create tokens on the platform\n@dev TokenFactory is a factory pattern implemented via a Library, that \nwill be used to create new tokens. It will basically conglomerate all\nthe logic related to tokens creation and it's business rules. \nAt the moment creates instances for every request without any \nvalidation, but the plan is to add all business rules here to create \ntokens. ",
        "fullyImplemented": true,
        "id": 1533,
        "linearizedBaseContracts": [
          1533
        ],
        "name": "TokenFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1444,
            "name": "MAX_OWNER_COMPANIES",
            "nodeType": "VariableDeclaration",
            "scope": 1533,
            "src": "679:45:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1442,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "679:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "33",
              "id": 1443,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "723:1:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1447,
            "name": "MAX_COMPANY_TOKENS",
            "nodeType": "VariableDeclaration",
            "scope": 1533,
            "src": "775:44:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1445,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "775:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 1446,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "818:1:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1452,
            "name": "EMPTY_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 1533,
            "src": "870:52:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1448,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "870:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "30",
                  "id": 1450,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "920:1:11",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 1449,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "912:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 1451,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "912:10:11",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1465,
              "nodeType": "Block",
              "src": "1045:145:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1457,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1704,
                            "src": "1076:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1076:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1459,
                          "name": "companyOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1454,
                          "src": "1090:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1076:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c7920636f6d70616e79206f776e65722063616e206578656375746520746869732066756e6374696f6e",
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1116:46:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_902c19f8fadccdb59d78ddff95b9a89705512fd8f607a38a0edfed89b93a1938",
                          "typeString": "literal_string \"Only company owner can execute this function\""
                        },
                        "value": "Only company owner can execute this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_902c19f8fadccdb59d78ddff95b9a89705512fd8f607a38a0edfed89b93a1938",
                          "typeString": "literal_string \"Only company owner can execute this function\""
                        }
                      ],
                      "id": 1456,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1707,
                        1708
                      ],
                      "referencedDeclaration": 1708,
                      "src": "1055:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1055:117:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1463,
                  "nodeType": "ExpressionStatement",
                  "src": "1055:117:11"
                },
                {
                  "id": 1464,
                  "nodeType": "PlaceholderStatement",
                  "src": "1182:1:11"
                }
              ]
            },
            "documentation": "@dev Verify caller is company owner ",
            "id": 1466,
            "name": "onlyCompanyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1454,
                  "name": "companyOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1466,
                  "src": "1023:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1022:22:11"
            },
            "src": "997:193:11",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1531,
              "nodeType": "Block",
              "src": "2440:530:11",
              "statements": [
                {
                  "assignments": [
                    1489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1489,
                      "name": "nextPosition",
                      "nodeType": "VariableDeclaration",
                      "scope": 1531,
                      "src": "2450:18:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1488,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2450:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1497,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1492,
                        "name": "self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1468,
                        "src": "2521:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1494,
                            "name": "aCompany",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1470,
                            "src": "2547:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2539:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2539:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1490,
                        "name": "TokenUtil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1689,
                        "src": "2471:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenUtil_$1689_$",
                          "typeString": "type(library TokenUtil)"
                        }
                      },
                      "id": 1491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nextTokenAvailablePosition",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1613,
                      "src": "2471:36:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Data_$817_storage_ptr_$_t_address_$returns$_t_uint8_$",
                        "typeString": "function (struct CompanyFactory.Data storage pointer,address) view returns (uint8)"
                      }
                    },
                    "id": 1496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2471:95:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2450:116:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1499,
                          "name": "MAX_COMPANY_TOKENS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1447,
                          "src": "2597:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1500,
                          "name": "nextPosition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1489,
                          "src": "2618:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2597:33:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f752063616e2774206372656174652061206e657720746f6b656e2e204d6178206c696d6974207265616368656420283520746f6b656e7329",
                        "id": 1502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2644:60:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e0586d094df9cb919e83219ede5ba2c8cfcb9bccd78df3e7e2ff29f79629f78",
                          "typeString": "literal_string \"You can't create a new token. Max limit reached (5 tokens)\""
                        },
                        "value": "You can't create a new token. Max limit reached (5 tokens)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e0586d094df9cb919e83219ede5ba2c8cfcb9bccd78df3e7e2ff29f79629f78",
                          "typeString": "literal_string \"You can't create a new token. Max limit reached (5 tokens)\""
                        }
                      ],
                      "id": 1498,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1707,
                        1708
                      ],
                      "referencedDeclaration": 1708,
                      "src": "2576:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2576:138:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:138:11"
                },
                {
                  "assignments": [
                    1506
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1506,
                      "name": "newToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1531,
                      "src": "2724:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$1434",
                        "typeString": "contract Token"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1505,
                        "name": "Token",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1434,
                        "src": "2724:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Token_$1434",
                          "typeString": "contract Token"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1516,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1509,
                        "name": "aCompany",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1470,
                        "src": "2764:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1510,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1704,
                          "src": "2786:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2786:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1512,
                        "name": "aName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1472,
                        "src": "2810:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1513,
                        "name": "aSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1474,
                        "src": "2829:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1514,
                        "name": "initialAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1476,
                        "src": "2850:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2741:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_Token_$1434_$",
                        "typeString": "function (address,address,string memory,string memory,uint256) returns (contract Token)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1507,
                        "name": "Token",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1434,
                        "src": "2745:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Token_$1434",
                          "typeString": "contract Token"
                        }
                      }
                    },
                    "id": 1515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2741:132:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$1434",
                      "typeString": "contract Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2724:149:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1517,
                            "name": "self",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1468,
                            "src": "2883:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                              "typeString": "struct CompanyFactory.Data storage pointer"
                            }
                          },
                          "id": 1521,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 816,
                          "src": "2883:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$5_storage_$",
                            "typeString": "mapping(address => address[5] storage ref)"
                          }
                        },
                        "id": 1522,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1519,
                          "name": "aCompany",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1470,
                          "src": "2895:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2883:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$5_storage",
                          "typeString": "address[5] storage ref"
                        }
                      },
                      "id": 1523,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1520,
                        "name": "nextPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1489,
                        "src": "2905:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2883:35:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1525,
                          "name": "newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1506,
                          "src": "2929:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Token_$1434",
                            "typeString": "contract Token"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Token_$1434",
                            "typeString": "contract Token"
                          }
                        ],
                        "id": 1524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2921:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2921:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2883:55:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1528,
                  "nodeType": "ExpressionStatement",
                  "src": "2883:55:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1529,
                    "name": "newToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1506,
                    "src": "2955:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$1434",
                      "typeString": "contract Token"
                    }
                  },
                  "functionReturnParameters": 1487,
                  "id": 1530,
                  "nodeType": "Return",
                  "src": "2948:15:11"
                }
              ]
            },
            "documentation": "@dev This function will create a token on the Platform. It will first\nvalidate that who is trying to create this token is the owner of the\ncompany. If it is the owner, then it will search for a position \navailable in the tokens array. If an available position is found, \nthen it will create a new Token instance and add it to the tokens\narray of that company.\n@param self This function will receive the object (where the data is \nstored) they are called on as their first parameter.\n@param aCompany address of the company that wants to create this token.\n@param aName string with the name of the token.\n@param aSymbol string with a 3 chars (aprox) token symbol.\n@param initialAmount uint256 with initial supply for this token.\n@return the token recently created. ",
            "id": 1532,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1481,
                        "name": "self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1468,
                        "src": "2394:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1482,
                        "name": "aCompany",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1470,
                        "src": "2400:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1479,
                        "name": "CompanyUtil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "2365:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CompanyUtil_$985_$",
                          "typeString": "type(library CompanyUtil)"
                        }
                      },
                      "id": 1480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "findCompanyOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 984,
                      "src": "2365:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Data_$817_storage_ptr_$_t_address_$returns$_t_address_$",
                        "typeString": "function (struct CompanyFactory.Data storage pointer,address) view returns (address)"
                      }
                    },
                    "id": 1483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2365:44:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1484,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1478,
                  "name": "onlyCompanyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1466,
                  "src": "2348:16:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2348:62:11"
              }
            ],
            "name": "createTokenForCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1468,
                  "name": "self",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "2161:32:11",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                    "typeString": "struct CompanyFactory.Data"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1467,
                    "name": "CompanyFactory.Data",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 817,
                    "src": "2161:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                      "typeString": "struct CompanyFactory.Data"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1470,
                  "name": "aCompany",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "2203:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2203:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1472,
                  "name": "aName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "2229:21:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1471,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2229:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1474,
                  "name": "aSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "2260:23:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1473,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2260:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1476,
                  "name": "initialAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "2293:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2293:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2151:169:11"
            },
            "returnParameters": {
              "id": 1487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1486,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "2428:5:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Token_$1434",
                    "typeString": "contract Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1485,
                    "name": "Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1434,
                    "src": "2428:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$1434",
                      "typeString": "contract Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2427:7:11"
            },
            "scope": 1533,
            "src": "2121:849:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1534,
        "src": "631:2342:11"
      }
    ],
    "src": "0:2974:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {
        "CompanyUtil": "0x5C28ee9463c5B6D0a581FF1a3D60a4AD7f30e147"
      },
      "address": "0xD288d0a489f0B79E189E145c5eD9d2f037B3C7cc",
      "transactionHash": "0x50f3e4731da204f2930d95d60c62fd4662083375796b3ea2b6ac12d4633eed63"
    },
    "5777": {
      "events": {},
      "links": {
        "CompanyUtil": "0xe7dFB5042C707F41425D47c16bB4B9E351c1E18c"
      },
      "address": "0x03540322CC9885D70913521E26D59c9BB1546264",
      "transactionHash": "0x3076828c8bbaa72ddd4595055d7ab8b62e468eba88b9dd43d543c43f5d52e745"
    }
  },
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-01-27T18:02:59.761Z",
  "devdoc": {
    "author": "Juan Castellon",
    "details": "TokenFactory is a factory pattern implemented via a Library, that  will be used to create new tokens. It will basically conglomerate all the logic related to tokens creation and it's business rules.  At the moment creates instances for every request without any  validation, but the plan is to add all business rules here to create  tokens. ",
    "methods": {
      "createTokenForCompany(CompanyFactory.Data storage,address,string,string,uint256)": {
        "details": "This function will create a token on the Platform. It will first validate that who is trying to create this token is the owner of the company. If it is the owner, then it will search for a position  available in the tokens array. If an available position is found,  then it will create a new Token instance and add it to the tokens array of that company.",
        "params": {
          "aCompany": "address of the company that wants to create this token.",
          "aName": "string with the name of the token.",
          "aSymbol": "string with a 3 chars (aprox) token symbol.",
          "initialAmount": "uint256 with initial supply for this token.",
          "self": "This function will receive the object (where the data is  stored) they are called on as their first parameter."
        },
        "return": "the token recently created. "
      }
    },
    "title": "Library to create tokens on the platform"
  },
  "userdoc": {
    "methods": {}
  }
}