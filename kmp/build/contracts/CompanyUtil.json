{
  "contractName": "CompanyUtil",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_COMPANY_TOKENS",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x38abeb43"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_OWNER_COMPANIES",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4642e0ba"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "EMPTY_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xeb39c3af"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "self",
          "type": "CompanyFactory.Data storage"
        },
        {
          "name": "aCompany",
          "type": "address"
        }
      ],
      "name": "findCompanyOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xf5612fc3"
    }
  ],
  "bytecode": "0x6102dc610030600b82828239805160001a6073146000811461002057610022565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100785763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166338abeb43811461007d5780634642e0ba1461009b578063eb39c3af146100a3578063f5612fc3146100d4575b600080fd5b61008561010d565b6040805160ff9092168252519081900360200190f35b610085610112565b6100ab610117565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100ab600480360360408110156100ea57600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff1661011c565b600581565b600381565b600081565b6000610126610291565b3360009081526020859052604090819020815160608101928390529160039082845b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116101485750939450600093505050505b600360ff821610156102845773ffffffffffffffffffffffffffffffffffffffff84168260ff8316600381106101b057fe5b602002015173ffffffffffffffffffffffffffffffffffffffff16141561027c578160ff8216600381106101e057fe5b602002015173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561024657600080fd5b505afa15801561025a573d6000803e3d6000fd5b505050506040513d602081101561027057600080fd5b5051925061028b915050565b60010161017e565b5060009150505b92915050565b606060405190810160405280600390602082028038833950919291505056fea165627a7a7230582066e5a492c048450c5ee1a3e148d5018cdf3510a0788584f6d0206211295ce2900029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100785763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166338abeb43811461007d5780634642e0ba1461009b578063eb39c3af146100a3578063f5612fc3146100d4575b600080fd5b61008561010d565b6040805160ff9092168252519081900360200190f35b610085610112565b6100ab610117565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100ab600480360360408110156100ea57600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff1661011c565b600581565b600381565b600081565b6000610126610291565b3360009081526020859052604090819020815160608101928390529160039082845b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116101485750939450600093505050505b600360ff821610156102845773ffffffffffffffffffffffffffffffffffffffff84168260ff8316600381106101b057fe5b602002015173ffffffffffffffffffffffffffffffffffffffff16141561027c578160ff8216600381106101e057fe5b602002015173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561024657600080fd5b505afa15801561025a573d6000803e3d6000fd5b505050506040513d602081101561027057600080fd5b5051925061028b915050565b60010161017e565b5060009150505b92915050565b606060405190810160405280600390602082028038833950919291505056fea165627a7a7230582066e5a492c048450c5ee1a3e148d5018cdf3510a0788584f6d0206211295ce2900029",
  "sourceMap": "569:1237:6:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "569:1237:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;712:44;;;;;;;;;;;;;;;;;;;;;;;616:45;;;;806:50;;;;;;;;;;;;;;;;;;;;;;;1379:424;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1379:424:6;;;;;;;;;;712:44;755:1;712:44;:::o;616:45::-;660:1;616:45;:::o;806:50::-;854:1;806:50;:::o;1379:424::-;1478:7;1497:50;;:::i;:::-;1565:10;1550:14;:26;;;;;;;;;;;;1497:79;;;;;;;;;;;;1550:26;1497:79;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1497:79:6;;-1:-1:-1;1591:7:6;;-1:-1:-1;;;;1586:181:6;660:1;1604:23;;;;1586:181;;;1652:29;;;:14;:17;;;;;;;;;;;;;;:29;;;1648:109;;;1716:14;:17;;;;;;;;;;;;;;1708:32;;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1708:34:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1708:34:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1708:34:6;;-1:-1:-1;1701:41:6;;-1:-1:-1;;1701:41:6;1648:109;1629:3;;1586:181;;;;854:1;1776:20;;;1379:424;;;;;:::o;569:1237::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;569:1237:6;;;-1:-1:-1;;569:1237:6:o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./Company.sol\";\nimport \"./CompanyFactory.sol\";\n\n/** @author Juan Castellon\n    @title Library to create companies on the platform\n    @dev CompanyFactory is a factory pattern implemented via a Library, that \n        will be used to create new companies. It will basically conglomerate all\n        the logic related to companies creation and it's business rules. \n        At the moment creates instances for every request without any \n        validation, but the plan is to add all business rules here to create \n        companies. \n */\nlibrary CompanyUtil {\n    /** Constants */\n    uint8 public constant MAX_OWNER_COMPANIES = 3; // 1 owner could register up to 3 companies.\n    uint8 public constant MAX_COMPANY_TOKENS = 5; // 1 company could register up to 5 tokens.\n    address public constant EMPTY_ADDRESS = address(0);\n\n\n\n    /** @dev Look for the company on the companies array for this specific owner. \n        If the company is found for this msg.sender then we return the owner,\n        in case the company is not found in the companies array, 0x is returned.\n        @param self This function will receive the object (where the data is \n                stored) they are called on as their first parameter.\n        @param aCompany company address to search for owner.\n        @return the owner's address or 0x if not found.\n     */\n    function findCompanyOwner(CompanyFactory.Data storage self, address aCompany) public view returns (address) {\n        address[MAX_OWNER_COMPANIES] memory ownerCompanies = self.companies[msg.sender];\n        for (uint8 i = 0; i < MAX_OWNER_COMPANIES; i++) {\n            if (ownerCompanies[i] == aCompany) {\n                return Company(ownerCompanies[i]).owner();\n            }\n        }\n        return EMPTY_ADDRESS;\n    }\n\n}\n",
  "sourcePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/CompanyUtil.sol",
  "ast": {
    "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/CompanyUtil.sol",
    "exportedSymbols": {
      "CompanyUtil": [
        985
      ]
    },
    "id": 986,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 921,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/Company.sol",
        "file": "./Company.sol",
        "id": 922,
        "nodeType": "ImportDirective",
        "scope": 986,
        "sourceUnit": 790,
        "src": "25:23:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/CompanyFactory.sol",
        "file": "./CompanyFactory.sol",
        "id": 923,
        "nodeType": "ImportDirective",
        "scope": 986,
        "sourceUnit": 920,
        "src": "49:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@author Juan Castellon\n@title Library to create companies on the platform\n@dev CompanyFactory is a factory pattern implemented via a Library, that \nwill be used to create new companies. It will basically conglomerate all\nthe logic related to companies creation and it's business rules. \nAt the moment creates instances for every request without any \nvalidation, but the plan is to add all business rules here to create \ncompanies. ",
        "fullyImplemented": true,
        "id": 985,
        "linearizedBaseContracts": [
          985
        ],
        "name": "CompanyUtil",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 926,
            "name": "MAX_OWNER_COMPANIES",
            "nodeType": "VariableDeclaration",
            "scope": 985,
            "src": "616:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 924,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "616:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "33",
              "id": 925,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "660:1:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 929,
            "name": "MAX_COMPANY_TOKENS",
            "nodeType": "VariableDeclaration",
            "scope": 985,
            "src": "712:44:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 927,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "712:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 928,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "755:1:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 934,
            "name": "EMPTY_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 985,
            "src": "806:50:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 930,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "806:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "30",
                  "id": 932,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "854:1:6",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 931,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "846:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 933,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "846:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 983,
              "nodeType": "Block",
              "src": "1487:316:6",
              "statements": [
                {
                  "assignments": [
                    947
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 947,
                      "name": "ownerCompanies",
                      "nodeType": "VariableDeclaration",
                      "scope": 983,
                      "src": "1497:50:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                        "typeString": "address[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 945,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1497:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 946,
                        "length": {
                          "argumentTypes": null,
                          "id": 944,
                          "name": "MAX_OWNER_COMPANIES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 926,
                          "src": "1505:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "1497:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                          "typeString": "address[3]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 953,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 948,
                        "name": "self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 936,
                        "src": "1550:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      },
                      "id": 949,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "companies",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 810,
                      "src": "1550:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$3_storage_$",
                        "typeString": "mapping(address => address[3] storage ref)"
                      }
                    },
                    "id": 952,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 950,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1704,
                        "src": "1565:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1565:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1550:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage",
                      "typeString": "address[3] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1497:79:6"
                },
                {
                  "body": {
                    "id": 979,
                    "nodeType": "Block",
                    "src": "1634:133:6",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 964,
                              "name": "ownerCompanies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 947,
                              "src": "1652:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                                "typeString": "address[3] memory"
                              }
                            },
                            "id": 966,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 965,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "1667:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1652:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 967,
                            "name": "aCompany",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 938,
                            "src": "1673:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1652:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 978,
                        "nodeType": "IfStatement",
                        "src": "1648:109:6",
                        "trueBody": {
                          "id": 977,
                          "nodeType": "Block",
                          "src": "1683:74:6",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 970,
                                          "name": "ownerCompanies",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 947,
                                          "src": "1716:14:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                                            "typeString": "address[3] memory"
                                          }
                                        },
                                        "id": 972,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 971,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 955,
                                          "src": "1731:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1716:17:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 969,
                                      "name": "Company",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 789,
                                      "src": "1708:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Company_$789_$",
                                        "typeString": "type(contract Company)"
                                      }
                                    },
                                    "id": 973,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1708:26:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Company_$789",
                                      "typeString": "contract Company"
                                    }
                                  },
                                  "id": 974,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1046,
                                  "src": "1708:32:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1708:34:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 942,
                              "id": 976,
                              "nodeType": "Return",
                              "src": "1701:41:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 958,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 955,
                      "src": "1604:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 959,
                      "name": "MAX_OWNER_COMPANIES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 926,
                      "src": "1608:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1604:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 980,
                  "initializationExpression": {
                    "assignments": [
                      955
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 955,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 980,
                        "src": "1591:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 954,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1591:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 957,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1601:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1591:11:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1629:3:6",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 961,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 955,
                        "src": "1629:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 963,
                    "nodeType": "ExpressionStatement",
                    "src": "1629:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "1586:181:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 981,
                    "name": "EMPTY_ADDRESS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 934,
                    "src": "1783:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 942,
                  "id": 982,
                  "nodeType": "Return",
                  "src": "1776:20:6"
                }
              ]
            },
            "documentation": "@dev Look for the company on the companies array for this specific owner. \nIf the company is found for this msg.sender then we return the owner,\nin case the company is not found in the companies array, 0x is returned.\n@param self This function will receive the object (where the data is \nstored) they are called on as their first parameter.\n@param aCompany company address to search for owner.\n@return the owner's address or 0x if not found.",
            "id": 984,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "findCompanyOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 936,
                  "name": "self",
                  "nodeType": "VariableDeclaration",
                  "scope": 984,
                  "src": "1405:32:6",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                    "typeString": "struct CompanyFactory.Data"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 935,
                    "name": "CompanyFactory.Data",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 817,
                    "src": "1405:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                      "typeString": "struct CompanyFactory.Data"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 938,
                  "name": "aCompany",
                  "nodeType": "VariableDeclaration",
                  "scope": 984,
                  "src": "1439:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1439:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1404:52:6"
            },
            "returnParameters": {
              "id": 942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 941,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 984,
                  "src": "1478:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1478:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1477:9:6"
            },
            "scope": 985,
            "src": "1379:424:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 986,
        "src": "569:1237:6"
      }
    ],
    "src": "0:1807:6"
  },
  "legacyAST": {
    "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/CompanyUtil.sol",
    "exportedSymbols": {
      "CompanyUtil": [
        985
      ]
    },
    "id": 986,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 921,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/Company.sol",
        "file": "./Company.sol",
        "id": 922,
        "nodeType": "ImportDirective",
        "scope": 986,
        "sourceUnit": 790,
        "src": "25:23:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/CompanyFactory.sol",
        "file": "./CompanyFactory.sol",
        "id": 923,
        "nodeType": "ImportDirective",
        "scope": 986,
        "sourceUnit": 920,
        "src": "49:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@author Juan Castellon\n@title Library to create companies on the platform\n@dev CompanyFactory is a factory pattern implemented via a Library, that \nwill be used to create new companies. It will basically conglomerate all\nthe logic related to companies creation and it's business rules. \nAt the moment creates instances for every request without any \nvalidation, but the plan is to add all business rules here to create \ncompanies. ",
        "fullyImplemented": true,
        "id": 985,
        "linearizedBaseContracts": [
          985
        ],
        "name": "CompanyUtil",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 926,
            "name": "MAX_OWNER_COMPANIES",
            "nodeType": "VariableDeclaration",
            "scope": 985,
            "src": "616:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 924,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "616:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "33",
              "id": 925,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "660:1:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 929,
            "name": "MAX_COMPANY_TOKENS",
            "nodeType": "VariableDeclaration",
            "scope": 985,
            "src": "712:44:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 927,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "712:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 928,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "755:1:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 934,
            "name": "EMPTY_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 985,
            "src": "806:50:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 930,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "806:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "30",
                  "id": 932,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "854:1:6",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 931,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "846:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 933,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "846:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 983,
              "nodeType": "Block",
              "src": "1487:316:6",
              "statements": [
                {
                  "assignments": [
                    947
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 947,
                      "name": "ownerCompanies",
                      "nodeType": "VariableDeclaration",
                      "scope": 983,
                      "src": "1497:50:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                        "typeString": "address[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 945,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1497:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 946,
                        "length": {
                          "argumentTypes": null,
                          "id": 944,
                          "name": "MAX_OWNER_COMPANIES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 926,
                          "src": "1505:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "1497:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                          "typeString": "address[3]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 953,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 948,
                        "name": "self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 936,
                        "src": "1550:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                          "typeString": "struct CompanyFactory.Data storage pointer"
                        }
                      },
                      "id": 949,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "companies",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 810,
                      "src": "1550:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$3_storage_$",
                        "typeString": "mapping(address => address[3] storage ref)"
                      }
                    },
                    "id": 952,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 950,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1704,
                        "src": "1565:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1565:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1550:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage",
                      "typeString": "address[3] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1497:79:6"
                },
                {
                  "body": {
                    "id": 979,
                    "nodeType": "Block",
                    "src": "1634:133:6",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 964,
                              "name": "ownerCompanies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 947,
                              "src": "1652:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                                "typeString": "address[3] memory"
                              }
                            },
                            "id": 966,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 965,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "1667:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1652:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 967,
                            "name": "aCompany",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 938,
                            "src": "1673:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1652:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 978,
                        "nodeType": "IfStatement",
                        "src": "1648:109:6",
                        "trueBody": {
                          "id": 977,
                          "nodeType": "Block",
                          "src": "1683:74:6",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 970,
                                          "name": "ownerCompanies",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 947,
                                          "src": "1716:14:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                                            "typeString": "address[3] memory"
                                          }
                                        },
                                        "id": 972,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 971,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 955,
                                          "src": "1731:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1716:17:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 969,
                                      "name": "Company",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 789,
                                      "src": "1708:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Company_$789_$",
                                        "typeString": "type(contract Company)"
                                      }
                                    },
                                    "id": 973,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1708:26:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Company_$789",
                                      "typeString": "contract Company"
                                    }
                                  },
                                  "id": 974,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1046,
                                  "src": "1708:32:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1708:34:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 942,
                              "id": 976,
                              "nodeType": "Return",
                              "src": "1701:41:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 958,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 955,
                      "src": "1604:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 959,
                      "name": "MAX_OWNER_COMPANIES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 926,
                      "src": "1608:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1604:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 980,
                  "initializationExpression": {
                    "assignments": [
                      955
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 955,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 980,
                        "src": "1591:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 954,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1591:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 957,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1601:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1591:11:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1629:3:6",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 961,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 955,
                        "src": "1629:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 963,
                    "nodeType": "ExpressionStatement",
                    "src": "1629:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "1586:181:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 981,
                    "name": "EMPTY_ADDRESS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 934,
                    "src": "1783:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 942,
                  "id": 982,
                  "nodeType": "Return",
                  "src": "1776:20:6"
                }
              ]
            },
            "documentation": "@dev Look for the company on the companies array for this specific owner. \nIf the company is found for this msg.sender then we return the owner,\nin case the company is not found in the companies array, 0x is returned.\n@param self This function will receive the object (where the data is \nstored) they are called on as their first parameter.\n@param aCompany company address to search for owner.\n@return the owner's address or 0x if not found.",
            "id": 984,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "findCompanyOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 936,
                  "name": "self",
                  "nodeType": "VariableDeclaration",
                  "scope": 984,
                  "src": "1405:32:6",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                    "typeString": "struct CompanyFactory.Data"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 935,
                    "name": "CompanyFactory.Data",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 817,
                    "src": "1405:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$817_storage_ptr",
                      "typeString": "struct CompanyFactory.Data"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 938,
                  "name": "aCompany",
                  "nodeType": "VariableDeclaration",
                  "scope": 984,
                  "src": "1439:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1439:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1404:52:6"
            },
            "returnParameters": {
              "id": 942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 941,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 984,
                  "src": "1478:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1478:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1477:9:6"
            },
            "scope": 985,
            "src": "1379:424:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 986,
        "src": "569:1237:6"
      }
    ],
    "src": "0:1807:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x5C28ee9463c5B6D0a581FF1a3D60a4AD7f30e147",
      "transactionHash": "0xd9220bfda41a72d781f93aaa2bc94075019b3a30d7d0e9cb3fe2859eba4007aa"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xe7dFB5042C707F41425D47c16bB4B9E351c1E18c",
      "transactionHash": "0xd20a572ccea1327227c7e711bb406adda7f2f4846c342af92819d6a7b0652506"
    }
  },
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-01-27T18:02:59.753Z",
  "devdoc": {
    "author": "Juan Castellon",
    "details": "CompanyFactory is a factory pattern implemented via a Library, that  will be used to create new companies. It will basically conglomerate all the logic related to companies creation and it's business rules.  At the moment creates instances for every request without any  validation, but the plan is to add all business rules here to create  companies. ",
    "methods": {
      "findCompanyOwner(CompanyFactory.Data storage,address)": {
        "details": "Look for the company on the companies array for this specific owner.  If the company is found for this msg.sender then we return the owner, in case the company is not found in the companies array, 0x is returned.",
        "params": {
          "aCompany": "company address to search for owner.",
          "self": "This function will receive the object (where the data is  stored) they are called on as their first parameter."
        },
        "return": "the owner's address or 0x if not found."
      }
    },
    "title": "Library to create companies on the platform"
  },
  "userdoc": {
    "methods": {}
  }
}