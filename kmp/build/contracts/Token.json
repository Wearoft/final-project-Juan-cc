{
  "contractName": "Token",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x313ce567"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x39509351"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "anOwner",
          "type": "address"
        }
      ],
      "name": "modifyOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x40cb3462"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa457c2d7"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "inputs": [
        {
          "name": "aCompany",
          "type": "address"
        },
        {
          "name": "anOwner",
          "type": "address"
        },
        {
          "name": "tokenName",
          "type": "string"
        },
        {
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000cab38038062000cab833981018060405260a08110156200003757600080fd5b81516020830151604084018051929491938201926401000000008111156200005e57600080fd5b820160208101848111156200007257600080fd5b81516401000000008111828201871017156200008d57600080fd5b50509291906020018051640100000000811115620000aa57600080fd5b82016020810184811115620000be57600080fd5b8151640100000000811182820187101715620000d957600080fd5b505060209182015160008054600160a060020a0319163317815586519295509093508592859262000111916004919086019062000280565b5081516200012790600590602085019062000280565b506006805460008054600160a060020a03808c16600160a060020a031992831617909255336101000261010060a860020a031960ff90961660ff1990941693909317949094169190911790915560078054918a1691909216179055506200019a90508482640100000000620001a5810204565b505050505062000325565b600160a060020a0382161515620001bb57600080fd5b600354620001d89082640100000000620009316200026682021704565b600355600160a060020a0382166000908152600160205260409020546200020e9082640100000000620009316200026682021704565b600160a060020a03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156200027957600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002c357805160ff1916838001178555620002f3565b82800160010185558215620002f3579182015b82811115620002f3578251825591602001919060010190620002d6565b506200030192915062000305565b5090565b6200032291905b808211156200030157600081556001016200030c565b90565b61097680620003356000396000f3fe6080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100c9578063095ea7b31461015357806318160ddd146101a057806323b872dd146101c7578063313ce5671461020a578063395093511461023557806340cb34621461026e57806370a08231146102a35780638da5cb5b146102d657806395d89b4114610307578063a457c2d71461031c578063a9059cbb14610355578063dd62ed3e1461038e575b600080fd5b3480156100d557600080fd5b506100de6103c9565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610118578181015183820152602001610100565b50505050905090810190601f1680156101455780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015f57600080fd5b5061018c6004803603604081101561017657600080fd5b50600160a060020a03813516906020013561045f565b604080519115158252519081900360200190f35b3480156101ac57600080fd5b506101b56104dd565b60408051918252519081900360200190f35b3480156101d357600080fd5b5061018c600480360360608110156101ea57600080fd5b50600160a060020a038135811691602081013590911690604001356104e3565b34801561021657600080fd5b5061021f6105ac565b6040805160ff9092168252519081900360200190f35b34801561024157600080fd5b5061018c6004803603604081101561025857600080fd5b50600160a060020a0381351690602001356105b5565b34801561027a57600080fd5b506102a16004803603602081101561029157600080fd5b5035600160a060020a0316610665565b005b3480156102af57600080fd5b506101b5600480360360208110156102c657600080fd5b5035600160a060020a0316610736565b3480156102e257600080fd5b506102eb610751565b60408051600160a060020a039092168252519081900360200190f35b34801561031357600080fd5b506100de610760565b34801561032857600080fd5b5061018c6004803603604081101561033f57600080fd5b50600160a060020a0381351690602001356107c1565b34801561036157600080fd5b5061018c6004803603604081101561037857600080fd5b50600160a060020a03813516906020013561080c565b34801561039a57600080fd5b506101b5600480360360408110156103b157600080fd5b50600160a060020a0381358116916020013516610822565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104555780601f1061042a57610100808354040283529160200191610455565b820191906000526020600020905b81548152906001019060200180831161043857829003601f168201915b5050505050905090565b6000600160a060020a038316151561047657600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b600160a060020a0383166000908152600260209081526040808320338452909152812054610517908363ffffffff61084d16565b600160a060020a0385166000908152600260209081526040808320338452909152902055610546848484610862565b600160a060020a0384166000818152600260209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60065460ff1690565b6000600160a060020a03831615156105cc57600080fd5b336000908152600260209081526040808320600160a060020a0387168452909152902054610600908363ffffffff61093116565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6000543390600160a060020a0316811461070657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4163636573732064656e6965642e20436f6d70616e79206f776e6572206f6e6c60448201527f792e000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b506000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a031660009081526001602052604090205490565b600054600160a060020a031681565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104555780601f1061042a57610100808354040283529160200191610455565b6000600160a060020a03831615156107d857600080fd5b336000908152600260209081526040808320600160a060020a0387168452909152902054610600908363ffffffff61084d16565b6000610819338484610862565b50600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282111561085c57600080fd5b50900390565b600160a060020a038216151561087757600080fd5b600160a060020a0383166000908152600160205260409020546108a0908263ffffffff61084d16565b600160a060020a0380851660009081526001602052604080822093909355908416815220546108d5908263ffffffff61093116565b600160a060020a0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561094357600080fd5b939250505056fea165627a7a72305820a31aa05fc265c22730a2f44ed74f77c57e9f17e8c5875cc103e31473e6b877930029",
  "deployedBytecode": "0x6080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100c9578063095ea7b31461015357806318160ddd146101a057806323b872dd146101c7578063313ce5671461020a578063395093511461023557806340cb34621461026e57806370a08231146102a35780638da5cb5b146102d657806395d89b4114610307578063a457c2d71461031c578063a9059cbb14610355578063dd62ed3e1461038e575b600080fd5b3480156100d557600080fd5b506100de6103c9565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610118578181015183820152602001610100565b50505050905090810190601f1680156101455780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015f57600080fd5b5061018c6004803603604081101561017657600080fd5b50600160a060020a03813516906020013561045f565b604080519115158252519081900360200190f35b3480156101ac57600080fd5b506101b56104dd565b60408051918252519081900360200190f35b3480156101d357600080fd5b5061018c600480360360608110156101ea57600080fd5b50600160a060020a038135811691602081013590911690604001356104e3565b34801561021657600080fd5b5061021f6105ac565b6040805160ff9092168252519081900360200190f35b34801561024157600080fd5b5061018c6004803603604081101561025857600080fd5b50600160a060020a0381351690602001356105b5565b34801561027a57600080fd5b506102a16004803603602081101561029157600080fd5b5035600160a060020a0316610665565b005b3480156102af57600080fd5b506101b5600480360360208110156102c657600080fd5b5035600160a060020a0316610736565b3480156102e257600080fd5b506102eb610751565b60408051600160a060020a039092168252519081900360200190f35b34801561031357600080fd5b506100de610760565b34801561032857600080fd5b5061018c6004803603604081101561033f57600080fd5b50600160a060020a0381351690602001356107c1565b34801561036157600080fd5b5061018c6004803603604081101561037857600080fd5b50600160a060020a03813516906020013561080c565b34801561039a57600080fd5b506101b5600480360360408110156103b157600080fd5b50600160a060020a0381358116916020013516610822565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104555780601f1061042a57610100808354040283529160200191610455565b820191906000526020600020905b81548152906001019060200180831161043857829003601f168201915b5050505050905090565b6000600160a060020a038316151561047657600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b600160a060020a0383166000908152600260209081526040808320338452909152812054610517908363ffffffff61084d16565b600160a060020a0385166000908152600260209081526040808320338452909152902055610546848484610862565b600160a060020a0384166000818152600260209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60065460ff1690565b6000600160a060020a03831615156105cc57600080fd5b336000908152600260209081526040808320600160a060020a0387168452909152902054610600908363ffffffff61093116565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6000543390600160a060020a0316811461070657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4163636573732064656e6965642e20436f6d70616e79206f776e6572206f6e6c60448201527f792e000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b506000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a031660009081526001602052604090205490565b600054600160a060020a031681565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104555780601f1061042a57610100808354040283529160200191610455565b6000600160a060020a03831615156107d857600080fd5b336000908152600260209081526040808320600160a060020a0387168452909152902054610600908363ffffffff61084d16565b6000610819338484610862565b50600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282111561085c57600080fd5b50900390565b600160a060020a038216151561087757600080fd5b600160a060020a0383166000908152600160205260409020546108a0908263ffffffff61084d16565b600160a060020a0380851660009081526001602052604080822093909355908416815220546108d5908263ffffffff61093116565b600160a060020a0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561094357600080fd5b939250505056fea165627a7a72305820a31aa05fc265c22730a2f44ed74f77c57e9f17e8c5875cc103e31473e6b877930029",
  "sourceMap": "444:1263:10:-;;;1179:525;8:9:-1;5:2;;;30:1;27;20:12;5:2;1179:525:10;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1179:525:10;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;1179:525:10;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;1179:525:10;;;;;554:1;1168:18:8;;-1:-1:-1;;;;;;1168:18:8;1176:10;1168:18;;;493:12:2;;1179:525:10;;-1:-1:-1;1179:525:10;;-1:-1:-1;1386:9:10;;1179:525;;493:12:2;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;515:16:2;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:2;:20;;:9;1469:15:10;;-1:-1:-1;;;;;1469:15:10;;;-1:-1:-1;;;;;;1469:15:10;;;;;;;1576:10;541:20:2;1561:25:10;-1:-1:-1;;;;;;541:20:2;;;;-1:-1:-1;;541:20:2;;;;;;;1561:25:10;;;;;;;;;;;1596:7;:18;;;;;;;;;;;;-1:-1:-1;1624:29:10;;-1:-1:-1;1477:7:10;1639:13;1624:5;;;;:29;:::i;:::-;1179:525;;;;;444:1263;;6198:263:1;-1:-1:-1;;;;;6272:21:1;;;;6264:30;;;;;;6320:12;;:23;;6337:5;6320:16;;;;;;:23;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:1;;;;;;:9;:18;;;;;;:29;;6397:5;6374:22;;;;;;:29;:::i;:::-;-1:-1:-1;;;;;6353:18:1;;;;;;:9;:18;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;;;6418:36;;;;;;;;;;6198:263;;:::o;1431:145:0:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:0:o;444:1263:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;444:1263:10;;;-1:-1:-1;444:1263:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "444:1263:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;628:81:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:238:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2735:238:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2735:238:1;;-1:-1:-1;;;;;2735:238:1;;;;;;;;;;;;;;;;;;;;;;;;;936:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;936:89:1;;;;;;;;;;;;;;;;;;;;3436:294;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3436:294:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3436:294:1;;;;;;;;;;;;;;;;;;930:81:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;930:81:2;;;;;;;;;;;;;;;;;;;;;;;4233:317:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4233:317:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4233:317:1;;-1:-1:-1;;;;;4233:317:1;;;;;;;1386:99:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1386:99:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1386:99:8;-1:-1:-1;;;;;1386:99:8;;;;;1234:104:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1234:104:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:1;-1:-1:-1;;;;;1234:104:1;;;493:20:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;493:20:8;;;;;;;;-1:-1:-1;;;;;493:20:8;;;;;;;;;;;;;;771:85:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;771:85:2;;;;5058:327:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5058:327:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5058:327:1;;-1:-1:-1;;;;;5058:327:1;;;;;;;1962:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1962:137:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1962:137:1;;-1:-1:-1;;;;;1962:137:1;;;;;;;1669:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1669:129:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1669:129:1;;;;;;;;;;;628:81:2;697:5;690:12;;;;;;;;;;;;;-1:-1:-1;;690:12:2;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2735:238:1:-;2800:4;-1:-1:-1;;;;;2824:21:1;;;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:1;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;2909:36;;;;;;;;;;;-1:-1:-1;2962:4:1;2735:238;;;;:::o;936:89::-;1006:12;;936:89;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:1;;3515:4;3560:14;;;-1:-1:-1;3560:14:1;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:30;:37::i;:::-;-1:-1:-1;;;;;3531:14:1;;;;;;-1:-1:-1;3531:14:1;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3531:14;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:1;;3675:14;;;;-1:-1:-1;3675:14:1;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;;;;;;;;;;;;-1:-1:-1;3719:4:1;3436:294;;;;;:::o;930:81:2:-;995:9;;;;930:81;:::o;4233:317:1:-;4313:4;-1:-1:-1;;;;;4337:21:1;;;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:1;;;;;;;;;;:45;;4436:10;4402:33;:45::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:1;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;4462:60;;;;;;;;;;;-1:-1:-1;4539:4:1;4233:317;;;;:::o;1386:99:8:-;929:5;;1441:10;;-1:-1:-1;;;;;929:5:8;:16;;921:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1463:5:8;:15;;-1:-1:-1;;1463:15:8;-1:-1:-1;;;;;1463:15:8;;;;;;;;;;1386:99::o;1234:104:1:-;-1:-1:-1;;;;;1315:16:1;1289:7;1315:16;;;-1:-1:-1;1315:16:1;;;;;;;1234:104::o;493:20:8:-;;;-1:-1:-1;;;;;493:20:8;;:::o;771:85:2:-;842:7;835:14;;;;;;;;;;;;;-1:-1:-1;;835:14:2;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;5058:327:1;5143:4;-1:-1:-1;;;;;5167:21:1;;;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:1;;;;;;;;;;:50;;5266:15;5232:33;:50::i;1962:137::-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;:::-;-1:-1:-1;2088:4:1;1962:137;;;;:::o;1669:129::-;-1:-1:-1;;;;;1767:15:1;;;1741:7;1767:15;;;-1:-1:-1;1767:15:1;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;1205:145:0:-;1263:7;1290:6;;;;1282:15;;;;;;-1:-1:-1;1319:5:0;;;1205:145::o;5599:256:1:-;-1:-1:-1;;;;;5686:16:1;;;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:1;;;;;;-1:-1:-1;5732:15:1;;;;;;:26;;5752:5;5732:19;:26::i;:::-;-1:-1:-1;;;;;5714:15:1;;;;;;;-1:-1:-1;5714:15:1;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:17;:24::i;:::-;-1:-1:-1;;;;;5768:13:1;;;;;;;-1:-1:-1;5768:13:1;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o;1431:145:0:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:0:o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../client/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"../client/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"./Owned.sol\";\n\n/** @author Juan Castellon\n    @title Token contract to be used in the Platform.\n    @dev Token is a contract that extends OpenZeppelin audited token contracts\n        and also has any Platform specific data. \n */\ncontract Token is Owned, ERC20, ERC20Detailed {\n    /** Constants */\n    uint8 private constant NO_DECIMALS = 0;\n\n    /** State variables */\n    address private tokenFactory;\n    address private company;\n\n    /** Constructors */\n    /** @dev Default constructor to create a token on the Platform. It uses \n            ERC20Detailed, ERC20 and Owned constructors to set state variables. \n        @param aCompany address of the company that requests this token creation.\n        @param anOwner address of the owner.\n        @param tokenName string with the name of the token.\n        @param tokenSymbol string with a 3 chars (aprox) token symbol.\n        @param initialSupply uint256 with initial total supply for this token.\n    */\n    constructor(\n        address aCompany,\n        address anOwner,\n        string memory tokenName,\n        string memory tokenSymbol,\n        uint256 initialSupply\n    ) \n        public \n        ERC20Detailed(tokenName, tokenSymbol, NO_DECIMALS)\n        ERC20()\n        Owned()\n    {\n        owner = anOwner; // TODO: refactor create from factory, but then transfer ownership\n        tokenFactory = msg.sender;\n        company = aCompany;\n        _mint(anOwner, initialSupply); // assigning all tokens to owner initially.\n    }\n\n}\n",
  "sourcePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/Token.sol",
  "ast": {
    "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        1434
      ]
    },
    "id": 1435,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1376,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/client/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "../client/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 1377,
        "nodeType": "ImportDirective",
        "scope": 1435,
        "sourceUnit": 560,
        "src": "25:86:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/client/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "../client/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 1378,
        "nodeType": "ImportDirective",
        "scope": 1435,
        "sourceUnit": 618,
        "src": "112:94:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/Owned.sol",
        "file": "./Owned.sol",
        "id": 1379,
        "nodeType": "ImportDirective",
        "scope": 1435,
        "sourceUnit": 1084,
        "src": "207:21:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1380,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1083,
              "src": "462:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$1083",
                "typeString": "contract Owned"
              }
            },
            "id": 1381,
            "nodeType": "InheritanceSpecifier",
            "src": "462:5:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1382,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 559,
              "src": "469:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$559",
                "typeString": "contract ERC20"
              }
            },
            "id": 1383,
            "nodeType": "InheritanceSpecifier",
            "src": "469:5:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1384,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 617,
              "src": "476:13:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$617",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 1385,
            "nodeType": "InheritanceSpecifier",
            "src": "476:13:10"
          }
        ],
        "contractDependencies": [
          559,
          617,
          686,
          1083
        ],
        "contractKind": "contract",
        "documentation": "@author Juan Castellon\n@title Token contract to be used in the Platform.\n@dev Token is a contract that extends OpenZeppelin audited token contracts\nand also has any Platform specific data. ",
        "fullyImplemented": true,
        "id": 1434,
        "linearizedBaseContracts": [
          1434,
          617,
          559,
          686,
          1083
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1388,
            "name": "NO_DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 1434,
            "src": "517:38:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1386,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "517:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1387,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "554:1:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1390,
            "name": "tokenFactory",
            "nodeType": "VariableDeclaration",
            "scope": 1434,
            "src": "589:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1389,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "589:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1392,
            "name": "company",
            "nodeType": "VariableDeclaration",
            "scope": 1434,
            "src": "623:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1391,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "623:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1432,
              "nodeType": "Block",
              "src": "1459:245:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1414,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1046,
                      "src": "1469:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1415,
                      "name": "anOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1396,
                      "src": "1477:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1469:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1417,
                  "nodeType": "ExpressionStatement",
                  "src": "1469:15:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1418,
                      "name": "tokenFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1390,
                      "src": "1561:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1419,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1704,
                        "src": "1576:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1576:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1561:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1422,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:25:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1423,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1392,
                      "src": "1596:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1424,
                      "name": "aCompany",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1394,
                      "src": "1606:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1596:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1426,
                  "nodeType": "ExpressionStatement",
                  "src": "1596:18:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1428,
                        "name": "anOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1396,
                        "src": "1630:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1429,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "1639:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1427,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 474,
                      "src": "1624:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1624:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1431,
                  "nodeType": "ExpressionStatement",
                  "src": "1624:29:10"
                }
              ]
            },
            "documentation": "@dev Default constructor to create a token on the Platform. It uses \nERC20Detailed, ERC20 and Owned constructors to set state variables. \n@param aCompany address of the company that requests this token creation.\n@param anOwner address of the owner.\n@param tokenName string with the name of the token.\n@param tokenSymbol string with a 3 chars (aprox) token symbol.\n@param initialSupply uint256 with initial total supply for this token.",
            "id": 1433,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1405,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1398,
                    "src": "1386:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1406,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1400,
                    "src": "1397:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1407,
                    "name": "NO_DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1388,
                    "src": "1410:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1408,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1404,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 617,
                  "src": "1372:13:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$617_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1372:50:10"
              },
              {
                "arguments": [],
                "id": 1410,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1409,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 559,
                  "src": "1431:5:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$559_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1431:7:10"
              },
              {
                "arguments": [],
                "id": 1412,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1411,
                  "name": "Owned",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1083,
                  "src": "1447:5:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Owned_$1083_$",
                    "typeString": "type(contract Owned)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1447:7:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1394,
                  "name": "aCompany",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "1200:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1200:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1396,
                  "name": "anOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "1226:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1398,
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "1251:23:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1397,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1400,
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "1284:25:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1399,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1402,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "1319:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1190:156:10"
            },
            "returnParameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1459:0:10"
            },
            "scope": 1434,
            "src": "1179:525:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1435,
        "src": "444:1263:10"
      }
    ],
    "src": "0:1708:10"
  },
  "legacyAST": {
    "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        1434
      ]
    },
    "id": 1435,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1376,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/client/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "../client/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 1377,
        "nodeType": "ImportDirective",
        "scope": 1435,
        "sourceUnit": 560,
        "src": "25:86:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/client/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "../client/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 1378,
        "nodeType": "ImportDirective",
        "scope": 1435,
        "sourceUnit": 618,
        "src": "112:94:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/consensys/final/final-project-Juan-cc/kmp/contracts/Owned.sol",
        "file": "./Owned.sol",
        "id": 1379,
        "nodeType": "ImportDirective",
        "scope": 1435,
        "sourceUnit": 1084,
        "src": "207:21:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1380,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1083,
              "src": "462:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$1083",
                "typeString": "contract Owned"
              }
            },
            "id": 1381,
            "nodeType": "InheritanceSpecifier",
            "src": "462:5:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1382,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 559,
              "src": "469:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$559",
                "typeString": "contract ERC20"
              }
            },
            "id": 1383,
            "nodeType": "InheritanceSpecifier",
            "src": "469:5:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1384,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 617,
              "src": "476:13:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$617",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 1385,
            "nodeType": "InheritanceSpecifier",
            "src": "476:13:10"
          }
        ],
        "contractDependencies": [
          559,
          617,
          686,
          1083
        ],
        "contractKind": "contract",
        "documentation": "@author Juan Castellon\n@title Token contract to be used in the Platform.\n@dev Token is a contract that extends OpenZeppelin audited token contracts\nand also has any Platform specific data. ",
        "fullyImplemented": true,
        "id": 1434,
        "linearizedBaseContracts": [
          1434,
          617,
          559,
          686,
          1083
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1388,
            "name": "NO_DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 1434,
            "src": "517:38:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1386,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "517:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1387,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "554:1:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1390,
            "name": "tokenFactory",
            "nodeType": "VariableDeclaration",
            "scope": 1434,
            "src": "589:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1389,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "589:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1392,
            "name": "company",
            "nodeType": "VariableDeclaration",
            "scope": 1434,
            "src": "623:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1391,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "623:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1432,
              "nodeType": "Block",
              "src": "1459:245:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1414,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1046,
                      "src": "1469:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1415,
                      "name": "anOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1396,
                      "src": "1477:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1469:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1417,
                  "nodeType": "ExpressionStatement",
                  "src": "1469:15:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1418,
                      "name": "tokenFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1390,
                      "src": "1561:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1419,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1704,
                        "src": "1576:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1576:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1561:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1422,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:25:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1423,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1392,
                      "src": "1596:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1424,
                      "name": "aCompany",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1394,
                      "src": "1606:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1596:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1426,
                  "nodeType": "ExpressionStatement",
                  "src": "1596:18:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1428,
                        "name": "anOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1396,
                        "src": "1630:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1429,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "1639:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1427,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 474,
                      "src": "1624:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1624:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1431,
                  "nodeType": "ExpressionStatement",
                  "src": "1624:29:10"
                }
              ]
            },
            "documentation": "@dev Default constructor to create a token on the Platform. It uses \nERC20Detailed, ERC20 and Owned constructors to set state variables. \n@param aCompany address of the company that requests this token creation.\n@param anOwner address of the owner.\n@param tokenName string with the name of the token.\n@param tokenSymbol string with a 3 chars (aprox) token symbol.\n@param initialSupply uint256 with initial total supply for this token.",
            "id": 1433,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1405,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1398,
                    "src": "1386:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1406,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1400,
                    "src": "1397:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1407,
                    "name": "NO_DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1388,
                    "src": "1410:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1408,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1404,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 617,
                  "src": "1372:13:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$617_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1372:50:10"
              },
              {
                "arguments": [],
                "id": 1410,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1409,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 559,
                  "src": "1431:5:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$559_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1431:7:10"
              },
              {
                "arguments": [],
                "id": 1412,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1411,
                  "name": "Owned",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1083,
                  "src": "1447:5:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Owned_$1083_$",
                    "typeString": "type(contract Owned)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1447:7:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1394,
                  "name": "aCompany",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "1200:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1200:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1396,
                  "name": "anOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "1226:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1398,
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "1251:23:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1397,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1400,
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "1284:25:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1399,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1402,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "1319:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1190:156:10"
            },
            "returnParameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1459:0:10"
            },
            "scope": 1434,
            "src": "1179:525:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1435,
        "src": "444:1263:10"
      }
    ],
    "src": "0:1708:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
      },
      "links": {},
      "address": "0x0aCbb9c6c86161e8cC5b327582Ee6f8f7e63CA17",
      "transactionHash": "0xc911109016c4dac95250eb947b45501eca98d7ed929a428026114eb1dab529f0"
    },
    "5777": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
      },
      "links": {},
      "address": "0xF4Aefc7F1b8fD51b38f47c38fE16D74Dc69677f3",
      "transactionHash": "0x53064d2834545dcaeafc09a796de6010d794e54355249c58925e5a5dd4940009"
    }
  },
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-01-27T18:02:59.773Z",
  "devdoc": {
    "author": "Juan Castellon",
    "details": "Token is a contract that extends OpenZeppelin audited token contracts and also has any Platform specific data. ",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "constructor": {
        "details": "Default constructor to create a token on the Platform. It uses  ERC20Detailed, ERC20 and Owned constructors to set state variables. ",
        "params": {
          "aCompany": "address of the company that requests this token creation.",
          "anOwner": "address of the owner.",
          "initialSupply": "uint256 with initial total supply for this token.",
          "tokenName": "string with the name of the token.",
          "tokenSymbol": "string with a 3 chars (aprox) token symbol."
        }
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "modifyOwner(address)": {
        "details": "This function will allow the owner of the contract to transfer  ownership to a new owner.",
        "params": {
          "anOwner": "new owner's address."
        }
      },
      "name()": {
        "return": "the name of the token."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "Token contract to be used in the Platform."
  },
  "userdoc": {
    "methods": {}
  }
}